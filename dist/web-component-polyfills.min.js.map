{"version":3,"file":"web-component-polyfills.min.js","sources":["../node_modules/@webcomponents/shadydom/src/utils.js","../node_modules/@webcomponents/shadydom/src/flush.js","../node_modules/@webcomponents/shadydom/src/observe-changes.js","../node_modules/@webcomponents/shadydom/src/innerHTML.js","../node_modules/@webcomponents/shadydom/src/native-tree.js","../node_modules/@webcomponents/shadydom/src/patch-accessors.js","../node_modules/@webcomponents/shadydom/src/logical-tree.js","../node_modules/@webcomponents/shadydom/src/logical-mutation.js","../node_modules/@webcomponents/shadydom/src/patch-events.js","../node_modules/@webcomponents/shadydom/src/array-splice.js","../node_modules/@webcomponents/shadydom/src/attach-shadow.js","../node_modules/@webcomponents/shadydom/src/patch-builtins.js","../node_modules/@webcomponents/custom-elements/src/Utilities.js","../node_modules/@webcomponents/shadycss/src/css-parse.js","../node_modules/@webcomponents/shadycss/src/style-settings.js","../node_modules/@webcomponents/shadycss/src/style-util.js","../node_modules/@webcomponents/shadycss/src/style-properties.js","../node_modules/@webcomponents/shadycss/src/document-watcher.js","../node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","../node_modules/@webcomponents/shadycss/src/document-wait.js","../node_modules/@webcomponents/shadycss/src/common-utils.js","../node_modules/webcomponents-platform/webcomponents-platform.js","../node_modules/@webcomponents/template/template.js","../node_modules/es6-promise/dist/es6-promise.auto.min.js","../node_modules/webcomponents.js/src/pre-polyfill.js","../node_modules/@webcomponents/shadydom/src/native-methods.js","../node_modules/@webcomponents/shadydom/src/shadydom.js","../node_modules/@webcomponents/custom-elements/src/CustomElementState.js","../node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","../node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","../node_modules/@webcomponents/custom-elements/src/Deferred.js","../node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","../node_modules/@webcomponents/custom-elements/src/Patch/Native.js","../node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js","../node_modules/@webcomponents/custom-elements/src/custom-elements.js","../node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","../node_modules/@webcomponents/custom-elements/src/Patch/Document.js","../node_modules/@webcomponents/custom-elements/src/Patch/Node.js","../node_modules/@webcomponents/custom-elements/src/Patch/Element.js","../node_modules/@webcomponents/shadycss/src/common-regex.js","../node_modules/@webcomponents/shadycss/src/style-transformer.js","../node_modules/@webcomponents/shadycss/src/style-info.js","../node_modules/@webcomponents/shadycss/src/style-placeholder.js","../node_modules/@webcomponents/shadycss/src/style-cache.js","../node_modules/@webcomponents/shadycss/src/template-map.js","../node_modules/@webcomponents/shadycss/src/custom-style-interface.js","../node_modules/@webcomponents/shadycss/src/scoping-shim.js","../node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","../node_modules/webcomponents.js/src/unresolved.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport let settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nlet desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\n\nexport function isTrackingLogicalChildNodes(node) {\n  return (node.__shady && node.__shady.firstChild !== undefined);\n}\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nexport function ownerShadyRootForNode(node) {\n  let root = node.getRootNode();\n  if (isShadyRoot(root)) {\n    return root;\n  }\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto['__patchProto'] = patchProto;\n  }\n  // old browsers don't have setPrototypeOf\n  obj.__proto__ = proto['__patchProto'];\n}\n\n\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport function microtask(callback) {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  node.__shady = node.__shady || {};\n  if (!node.__shady.observer) {\n    node.__shady.observer = new AsyncObserver();\n  }\n  node.__shady.observer.callbacks.add(callback);\n  let observer = node.__shady.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      handle._node.__shady.observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {getInnerHTML} from './innerHTML.js';\n\nlet nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\nlet elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\nexport function parentNode(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.parentNode();\n}\n\nexport function firstChild(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.firstChild();\n}\n\nexport function lastChild(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.lastChild();\n}\n\nexport function previousSibling(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.previousSibling();\n}\n\nexport function nextSibling(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.nextSibling();\n}\n\nexport function childNodes(node) {\n  let nodes = [];\n  nodeWalker.currentNode = node;\n  let n = nodeWalker.firstChild();\n  while (n) {\n    nodes.push(n);\n    n = nodeWalker.nextSibling();\n  }\n  return nodes;\n}\n\nexport function parentElement(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.parentNode();\n}\n\nexport function firstElementChild(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.firstChild();\n}\n\nexport function lastElementChild(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.lastChild();\n}\n\nexport function previousElementSibling(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.previousSibling();\n}\n\nexport function nextElementSibling(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.nextSibling();\n}\n\nexport function children(node) {\n  let nodes = [];\n  elementWalker.currentNode = node;\n  let n = elementWalker.firstChild();\n  while (n) {\n    nodes.push(n);\n    n = elementWalker.nextSibling();\n  }\n  return nodes;\n}\n\nexport function innerHTML(node) {\n  return getInnerHTML(node, (n) => childNodes(n));\n}\n\nexport function textContent(node) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE:\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      let textWalker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT,\n        null, false);\n      let content = '', n;\n      while ( (n = textWalker.nextNode()) ) {\n        // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n        // However, should probably patch it only on element.\n        content += n.nodeValue;\n      }\n      return content;\n    default:\n      return node.nodeValue;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {getInnerHTML} from './innerHTML.js';\nimport * as nativeTree from './native-tree.js';\n\nfunction clearNode(node) {\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n}\n\nconst nativeInnerHTMLDesc = /** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML') ||\n  Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML'));\n\nconst inertDoc = document.implementation.createHTMLDocument('inert');\nconst htmlContainer = inertDoc.createElement('div');\n\nconst nativeActiveElementDescriptor =\n  /** @type {ObjectPropertyDescriptor} */(\n    Object.getOwnPropertyDescriptor(Document.prototype, 'activeElement')\n  );\nfunction getDocumentActiveElement() {\n  if (nativeActiveElementDescriptor && nativeActiveElementDescriptor.get) {\n    return nativeActiveElementDescriptor.get.call(document);\n  } else if (!utils.settings.hasDescriptors) {\n    return document.activeElement;\n  }\n}\n\nfunction activeElementForNode(node) {\n  let active = getDocumentActiveElement();\n  // In IE11, activeElement might be an empty object if the document is\n  // contained in an iframe.\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n  if (!active || !active.nodeType) {\n    return null;\n  }\n  let isShadyRoot = !!(utils.isShadyRoot(node));\n  if (node !== document) {\n    // If this node isn't a document or shady root, then it doesn't have\n    // an active element.\n    if (!isShadyRoot) {\n      return null;\n    }\n    // If this shady root's host is the active element or the active\n    // element is not a descendant of the host (in the composed tree),\n    // then it doesn't have an active element.\n    if (node.host === active ||\n        !node.host.contains(active)) {\n      return null;\n    }\n  }\n  // This node is either the document or a shady root of which the active\n  // element is a (composed) descendant of its host; iterate upwards to\n  // find the active element's most shallow host within it.\n  let activeRoot = utils.ownerShadyRootForNode(active);\n  while (activeRoot && activeRoot !== node) {\n    active = activeRoot.host;\n    activeRoot = utils.ownerShadyRootForNode(active);\n  }\n  if (node === document) {\n    // This node is the document, so activeRoot should be null.\n    return activeRoot ? null : active;\n  } else {\n    // This node is a non-document shady root, and it should be\n    // activeRoot.\n    return activeRoot === node ? active : null;\n  }\n}\n\nlet OutsideAccessors = {\n\n  parentElement: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.parentNode;\n      if (l && l.nodeType !== Node.ELEMENT_NODE) {\n        l = null;\n      }\n      return l !== undefined ? l : nativeTree.parentElement(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.parentNode;\n      return l !== undefined ? l : nativeTree.parentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.nextSibling;\n      return l !== undefined ? l : nativeTree.nextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.previousSibling;\n      return l !== undefined ? l : nativeTree.previousSibling(this);\n    },\n    configurable: true\n  },\n\n  className: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return this.getAttribute('class') || '';\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(value) {\n      this.setAttribute('class', value);\n    },\n    configurable: true\n  },\n\n  // fragment, element, document\n  nextElementSibling: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.nextSibling !== undefined) {\n        let n = this.nextSibling;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.nextSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.nextElementSibling(this);\n      }\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.previousSibling !== undefined) {\n        let n = this.previousSibling;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.previousSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.previousElementSibling(this);\n      }\n    },\n    configurable: true\n  }\n\n};\n\nlet InsideAccessors = {\n\n  childNodes: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      let childNodes;\n      if (utils.isTrackingLogicalChildNodes(this)) {\n        if (!this.__shady.childNodes) {\n          this.__shady.childNodes = [];\n          for (let n=this.firstChild; n; n=n.nextSibling) {\n            this.__shady.childNodes.push(n);\n          }\n        }\n        childNodes = this.__shady.childNodes;\n      } else {\n        childNodes = nativeTree.childNodes(this);\n      }\n      childNodes.item = function(index) {\n        return childNodes[index];\n      }\n      return childNodes;\n    },\n    configurable: true\n  },\n\n  childElementCount: {\n    /** @this {HTMLElement} */\n    get() {\n      return this.children.length;\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    /** @this {HTMLElement} */\n    get() {\n      let l = this.__shady && this.__shady.firstChild;\n      return l !== undefined ? l : nativeTree.firstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n  /** @this {HTMLElement} */\n    get() {\n      let l = this.__shady && this.__shady.lastChild;\n      return l !== undefined ? l : nativeTree.lastChild(this);\n    },\n    configurable: true\n  },\n\n  textContent: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (utils.isTrackingLogicalChildNodes(this)) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      } else {\n        return nativeTree.textContent(this);\n      }\n    },\n    /**\n     * @this {HTMLElement}\n     * @param {string} text\n     */\n    set(text) {\n      switch (this.nodeType) {\n        case Node.ELEMENT_NODE:\n        case Node.DOCUMENT_FRAGMENT_NODE:\n          clearNode(this);\n          this.appendChild(document.createTextNode(text));\n          break;\n        default:\n          // TODO(sorvell): can't do this if patch nodeValue.\n          this.nodeValue = text;\n          break;\n      }\n    },\n    configurable: true\n  },\n\n  // fragment, element, document\n  firstElementChild: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        let n = this.firstChild;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.nextSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.firstElementChild(this);\n      }\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.lastChild !== undefined) {\n        let n = this.lastChild;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.previousSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.lastElementChild(this);\n      }\n    },\n    configurable: true\n  },\n\n  children: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      let children;\n      if (utils.isTrackingLogicalChildNodes(this)) {\n        children = Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        children = nativeTree.children(this);\n      }\n      children.item = function(index) {\n        return children[index];\n      }\n      return children;\n    },\n    configurable: true\n  },\n\n  // element (HTMLElement on IE11)\n  innerHTML: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      let content = this.localName === 'template' ?\n        /** @type {HTMLTemplateElement} */(this).content : this;\n      if (utils.isTrackingLogicalChildNodes(this)) {\n        return getInnerHTML(content);\n      } else {\n        return nativeTree.innerHTML(content);\n      }\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(text) {\n      let content = this.localName === 'template' ?\n        /** @type {HTMLTemplateElement} */(this).content : this;\n      clearNode(content);\n      if (nativeInnerHTMLDesc && nativeInnerHTMLDesc.set) {\n        nativeInnerHTMLDesc.set.call(htmlContainer, text);\n      } else {\n        htmlContainer.innerHTML = text;\n      }\n      while (htmlContainer.firstChild) {\n        content.appendChild(htmlContainer.firstChild);\n      }\n    },\n    configurable: true\n  }\n\n};\n\n// Note: Can be patched on element prototype on all browsers.\n// Must be patched on instance on browsers that support native Shadow DOM\n// but do not have builtin accessors (old Chrome).\nexport let ShadowRootAccessor = {\n\n  shadowRoot: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return this.__shady && this.__shady.publicRoot || null;\n    },\n    configurable: true\n  }\n};\n\n// Note: Can be patched on document prototype on browsers with builtin accessors.\n// Must be patched separately on simulated ShadowRoot.\n// Must be patched as `_activeElement` on browsers without builtin accessors.\nexport let ActiveElementAccessor = {\n\n  activeElement: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return activeElementForNode(this);\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set() {},\n    configurable: true\n  }\n\n};\n\n// patch a group of descriptors on an object only if it exists or if the `force`\n// argument is true.\n/**\n * @param {!Object} obj\n * @param {!Object} descriptors\n * @param {boolean=} force\n */\nfunction patchAccessorGroup(obj, descriptors, force) {\n  for (let p in descriptors) {\n    let objDesc = Object.getOwnPropertyDescriptor(obj, p);\n    if ((objDesc && objDesc.configurable) ||\n      (!objDesc && force)) {\n      Object.defineProperty(obj, p, descriptors[p]);\n    } else if (force) {\n      console.warn('Could not define', p, 'on', obj);\n    }\n  }\n}\n\n// patch dom accessors on proto where they exist\nexport function patchAccessors(proto) {\n  patchAccessorGroup(proto, OutsideAccessors);\n  patchAccessorGroup(proto, InsideAccessors);\n  patchAccessorGroup(proto, ActiveElementAccessor);\n}\n\n// ensure element descriptors (IE/Edge don't have em)\nexport function patchShadowRootAccessors(proto) {\n  patchAccessorGroup(proto, InsideAccessors, true);\n  patchAccessorGroup(proto, ActiveElementAccessor, true);\n}\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = utils.settings.hasDescriptors ?\n  function() {} : function(element) {\n    if (!(element.__shady && element.__shady.__outsideAccessors)) {\n      element.__shady = element.__shady || {};\n      element.__shady.__outsideAccessors = true;\n      patchAccessorGroup(element, OutsideAccessors, true);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = utils.settings.hasDescriptors ?\n  function() {} : function(element) {\n    if (!(element.__shady && element.__shady.__insideAccessors)) {\n      element.__shady = element.__shady || {};\n      element.__shady.__insideAccessors = true;\n      patchAccessorGroup(element, InsideAccessors, true);\n      patchAccessorGroup(element, ShadowRootAccessor, true);\n    }\n  }\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-accessors.js';\nimport {firstChild, lastChild, childNodes} from './native-tree.js';\n\nexport function recordInsertBefore(node, container, ref_node) {\n  patchInsideElementAccessors(container);\n  container.__shady = container.__shady || {};\n  if (container.__shady.firstChild !== undefined) {\n    container.__shady.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    let c$ = node.childNodes;\n    for (let i=0; i < c$.length; i++) {\n      linkNode(c$[i], container, ref_node);\n    }\n    // cleanup logical dom in doc fragment.\n    node.__shady = node.__shady || {};\n    let resetTo = (node.__shady.firstChild !== undefined) ? null : undefined;\n    node.__shady.firstChild = node.__shady.lastChild = resetTo;\n    node.__shady.childNodes = resetTo;\n  } else {\n    linkNode(node, container, ref_node);\n  }\n}\n\nfunction linkNode(node, container, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  node.__shady = node.__shady || {};\n  container.__shady = container.__shady || {};\n  if (ref_node) {\n    ref_node.__shady = ref_node.__shady || {};\n  }\n  // update ref_node.previousSibling <-> node\n  node.__shady.previousSibling = ref_node ? ref_node.__shady.previousSibling :\n    container.lastChild;\n  let ps = node.__shady.previousSibling;\n  if (ps && ps.__shady) {\n    ps.__shady.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let ns = node.__shady.nextSibling = ref_node;\n  if (ns && ns.__shady) {\n    ns.__shady.previousSibling = node;\n  }\n  // update node <-> container\n  node.__shady.parentNode = container;\n  if (ref_node) {\n    if (ref_node === container.__shady.firstChild) {\n      container.__shady.firstChild = node;\n    }\n  } else {\n    container.__shady.lastChild = node;\n    if (!container.__shady.firstChild) {\n      container.__shady.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  container.__shady.childNodes = null;\n}\n\nexport function recordRemoveChild(node, container) {\n  node.__shady = node.__shady || {};\n  container.__shady = container.__shady || {};\n  if (node === container.__shady.firstChild) {\n    container.__shady.firstChild = node.__shady.nextSibling;\n  }\n  if (node === container.__shady.lastChild) {\n    container.__shady.lastChild = node.__shady.previousSibling;\n  }\n  let p = node.__shady.previousSibling;\n  let n = node.__shady.nextSibling;\n  if (p) {\n    p.__shady = p.__shady || {};\n    p.__shady.nextSibling = n;\n  }\n  if (n) {\n    n.__shady = n.__shady || {};\n    n.__shady.previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  node.__shady.parentNode = node.__shady.previousSibling =\n    node.__shady.nextSibling = undefined;\n  if (container.__shady.childNodes !== undefined) {\n    // remove caching of childNodes\n    container.__shady.childNodes = null;\n  }\n}\n\nexport let recordChildNodes = function(node) {\n  if (!node.__shady || node.__shady.firstChild === undefined) {\n    node.__shady = node.__shady || {};\n    node.__shady.firstChild = firstChild(node);\n    node.__shady.lastChild = lastChild(node);\n    patchInsideElementAccessors(node);\n    let c$ = node.__shady.childNodes = childNodes(node);\n    for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n      n.__shady = n.__shady || {};\n      n.__shady.parentNode = node;\n      n.__shady.nextSibling = c$[i+1] || null;\n      n.__shady.previousSibling = c$[i-1] || null;\n      patchOutsideElementAccessors(n);\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport * as logicalTree from './logical-tree.js';\nimport * as nativeMethods from './native-methods.js';\nimport {parentNode} from './native-tree.js';\n\n// Patched `insertBefore`. Note that all mutations that add nodes are routed\n// here. When a <slot> is added or a node is added to a host with a shadowRoot\n// with a slot, a standard dom `insert` call is aborted and `_asyncRender`\n// is called on the relevant shadowRoot. In all other cases, a standard dom\n// `insert` can be made, but the location and ref_node may need to be changed.\n/**\n * @param {Node} parent\n * @param {Node} node\n * @param {Node=} ref_node\n */\nexport function insertBefore(parent, node, ref_node) {\n  if (node === parent) {\n    throw Error(`Failed to execute 'appendChild' on 'Node': The new child element contains the parent.`);\n  }\n  if (ref_node) {\n    let p = ref_node.__shady && ref_node.__shady.parentNode;\n    if ((p !== undefined && p !== parent) ||\n      (p === undefined && parentNode(ref_node) !== parent)) {\n      throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n       `before which the new node is to be inserted is not a child of this node.`);\n    }\n  }\n  if (ref_node === node) {\n    return node;\n  }\n  // remove from existing location\n  if (node.parentNode) {\n    // NOTE: avoid node.removeChild as this *can* trigger another patched\n    // method (e.g. custom elements) and we want only the shady method to run.\n    removeChild(node.parentNode, node);\n  }\n  // add to new parent\n  let preventNativeInsert;\n  let ownerRoot = utils.ownerShadyRootForNode(parent);\n  // if a slot is added, must render containing root.\n  let slotsAdded = ownerRoot && findContainedSlots(node);\n  if (ownerRoot && (parent.localName === 'slot' || slotsAdded)) {\n    ownerRoot._asyncRender();\n  }\n  if (utils.isTrackingLogicalChildNodes(parent)) {\n    logicalTree.recordInsertBefore(node, parent, ref_node);\n    // when inserting into a host with a shadowRoot with slot, use\n    // `shadowRoot._asyncRender()` via `attach-shadow` module\n    if (hasShadowRootWithSlot(parent)) {\n      parent.__shady.root._asyncRender();\n      preventNativeInsert = true;\n    // when inserting into a host with shadowRoot with NO slot, do nothing\n    // as the node should not be added to composed dome anywhere.\n    } else if (parent.__shady.root) {\n      preventNativeInsert = true;\n    }\n  }\n  if (!preventNativeInsert) {\n    // if adding to a shadyRoot, add to host instead\n    let container = utils.isShadyRoot(parent) ?\n      /** @type {ShadowRoot} */(parent).host : parent;\n    // if ref_node, get the ref_node that's actually in composed dom.\n    if (ref_node) {\n      ref_node = firstComposedNode(ref_node);\n      nativeMethods.insertBefore.call(container, node, ref_node);\n    } else {\n      nativeMethods.appendChild.call(container, node);\n    }\n  }\n  scheduleObserver(parent, node);\n  // with insertion complete, can safely update insertion points.\n  if (slotsAdded) {\n    ownerRoot._addSlots(slotsAdded);\n  }\n  return node;\n}\n\nfunction findContainedSlots(node) {\n  if (!node['__noInsertionPoint']) {\n    let slots;\n    if (node.localName === 'slot') {\n      slots = [node];\n    } else if (node.querySelectorAll) {\n      slots = node.querySelectorAll('slot');\n    }\n    if (slots && slots.length) {\n      return slots;\n    }\n  }\n}\n\n/**\n * Patched `removeChild`. Note that all dom \"removals\" are routed here.\n * Removes the given `node` from the element's `children`.\n * This method also performs dom composition.\n * @param {Node} parent\n * @param {Node} node\n*/\nexport function removeChild(parent, node) {\n  if (node.parentNode !== parent) {\n    throw Error('The node to be removed is not a child of this node: ' +\n      node);\n  }\n  let preventNativeRemove;\n  let ownerRoot = utils.ownerShadyRootForNode(node);\n  let removingInsertionPoint;\n  if (utils.isTrackingLogicalChildNodes(parent)) {\n    logicalTree.recordRemoveChild(node, parent);\n    if (hasShadowRootWithSlot(parent)) {\n      parent.__shady.root._asyncRender();\n      preventNativeRemove = true;\n    }\n  }\n  removeOwnerShadyRoot(node);\n  // if removing slot, must render containing root\n  if (ownerRoot) {\n    let changeSlotContent = parent && parent.localName === 'slot';\n    if (changeSlotContent) {\n      preventNativeRemove = true;\n    }\n    removingInsertionPoint = ownerRoot._removeContainedSlots(node);\n    if (removingInsertionPoint || changeSlotContent) {\n      ownerRoot._asyncRender();\n    }\n  }\n  if (!preventNativeRemove) {\n    // if removing from a shadyRoot, remove form host instead\n    let container = utils.isShadyRoot(parent) ?\n      /** @type {ShadowRoot} */(parent).host :\n      parent;\n    // not guaranteed to physically be in container; e.g.\n    // (1) if parent has a shadyRoot, element may or may not at distributed\n    // location (could be undistributed)\n    // (2) if parent is a slot, element may not ben in composed dom\n    if (!(parent.__shady.root || node.localName === 'slot') ||\n      (container === parentNode(node))) {\n      nativeMethods.removeChild.call(container, node);\n    }\n  }\n  scheduleObserver(parent, null, node);\n  return node;\n}\n\nfunction removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (hasCachedOwnerRoot(node)) {\n    let c$ = node.childNodes;\n    for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n      removeOwnerShadyRoot(n);\n    }\n  }\n  if (node.__shady) {\n    node.__shady.ownerShadyRoot = undefined;\n  }\n}\n\nfunction hasCachedOwnerRoot(node) {\n  return Boolean(node.__shady && node.__shady.ownerShadyRoot !== undefined);\n}\n\n/**\n * Finds the first flattened node that is composed in the node's parent.\n * If the given node is a slot, then the first flattened node is returned\n * if it exists, otherwise advance to the node's nextSibling.\n * @param {Node} node within which to find first composed node\n * @returns {Node} first composed node\n */\nfunction firstComposedNode(node) {\n  let composed = node;\n  if (node && node.localName === 'slot') {\n    let flattened = node.__shady && node.__shady.flattenedNodes;\n    composed = flattened && flattened.length ? flattened[0] :\n      firstComposedNode(node.nextSibling);\n  }\n  return composed;\n}\n\nfunction hasShadowRootWithSlot(node) {\n  let root = node && node.__shady && node.__shady.root;\n  return (root && root._hasInsertionPoint());\n}\n\n/**\n * Should be called whenever an attribute changes. If the `slot` attribute\n * changes, provokes rendering if necessary. If a `<slot>` element's `name`\n * attribute changes, updates the root's slot map and renders.\n * @param {Node} node\n * @param {string} name\n */\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    const parent = node.parentNode;\n    if (hasShadowRootWithSlot(parent)) {\n      parent.__shady.root._asyncRender();\n    }\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = utils.ownerShadyRootForNode(node);\n    if (root) {\n      root._updateSlotName(node);\n      root._asyncRender();\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction scheduleObserver(node, addedNode, removedNode) {\n  let observer = node.__shady && node.__shady.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Object=} options\n */\nexport function getRootNode(node, options) { // eslint-disable-line no-unused-vars\n  if (!node || !node.nodeType) {\n    return;\n  }\n  node.__shady = node.__shady || {};\n  let root = node.__shady.ownerShadyRoot;\n  if (root === undefined) {\n    if (utils.isShadyRoot(node)) {\n      root = node;\n    } else {\n      let parent = node.parentNode;\n      root = parent ? getRootNode(parent) : node;\n    }\n    // memo-ize result for performance but only memo-ize\n    // result if node is in the document. This avoids a problem where a root\n    // can be cached while an element is inside a fragment.\n    // If this happens and we cache the result, the value can become stale\n    // because for perf we avoid processing the subtree of added fragments.\n    if (document.documentElement.contains(node)) {\n      node.__shady.ownerShadyRoot = root;\n    }\n  }\n  return root;\n}\n\n// NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n// but it's also generally useful to recurse through the element tree\n// and is used by Polymer's styling system.\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  queryElements(node.childNodes, matcher,\n    halter, list);\n  return list;\n}\n\nfunction queryElements(elements, matcher, halter, list) {\n  for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n    if (c.nodeType === Node.ELEMENT_NODE &&\n        queryElement(c, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  queryElements(node.childNodes, matcher,\n    halter, list);\n}\n\nexport function renderRootNode(element) {\n  var root = element.getRootNode();\n  if (utils.isShadyRoot(root)) {\n    root._render();\n  }\n}\n\nlet scopingShim = null;\n\nexport function setAttribute(node, attr, value) {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n  } else {\n    nativeMethods.setAttribute.call(node, attr, value);\n    distributeAttributeChange(node, attr);\n  }\n}\n\nexport function removeAttribute(node, attr) {\n  nativeMethods.removeAttribute.call(node, attr);\n  distributeAttributeChange(node, attr);\n}\n\nexport function cloneNode(node, deep) {\n  if (node.localName == 'template') {\n    return nativeMethods.cloneNode.call(node, deep);\n  } else {\n    let n = nativeMethods.cloneNode.call(node, false);\n    if (deep) {\n      let c$ = node.childNodes;\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = c$[i].cloneNode(true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n}\n\n// note: Though not technically correct, we fast path `importNode`\n// when called on a node not owned by the main document.\n// This allows, for example, elements that cannot\n// contain custom elements and are therefore not likely to contain shadowRoots\n// to cloned natively. This is a fairly significant performance win.\nexport function importNode(node, deep) {\n  if (node.ownerDocument !== document) {\n    return nativeMethods.importNode.call(document, node, deep);\n  }\n  let n = nativeMethods.importNode.call(document, node, false);\n  if (deep) {\n    let c$ = node.childNodes;\n    for (let i=0, nc; i < c$.length; i++) {\n      nc = importNode(c$[i], true);\n      n.appendChild(nc);\n    }\n  }\n  return n;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport * as nativeMethods from './native-methods.js';\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  'blur': true,\n  'focus': true,\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet eventMixin = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    // isTrusted may not exist in this browser, so just check if isTrusted is explicitly false\n    if (this.isTrusted !== false && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      if (event.target === event.relatedTarget) {\n        return;\n      }\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {get() { return Event.AT_TARGET }});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    const root = node.__shady && node.__shady.root;\n    if (i === 0 || (root && root === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node.getRootNode();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\nexport function findListener(wrappers, node, type, capture, once, passive) {\n  for (let i = 0; i < wrappers.length; i++) {\n    if (listenerSettingsEqual(wrappers[i], node, type, capture, once, passive)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Firefox can throw on accessing __eventWrappers inside of `removeEventListener` during a selenium run\n * Try/Catch accessing __eventWrappers to work around\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1353074\n */\nfunction getEventWrappers(eventLike) {\n  let wrappers = null;\n  try {\n    wrappers = eventLike.__eventWrappers;\n  } catch (e) {} // eslint-disable-line no-empty\n  return wrappers;\n}\n\n/**\n * @this {Event}\n */\nexport function addEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n\n  // The callback `fn` might be used for multiple nodes/events. Since we generate\n  // a wrapper function, we need to keep track of it when we remove the listener.\n  // It's more efficient to store the node/type/options information as Array in\n  // `fn` itself rather than the node (we assume that the same callback is used\n  // for few nodes at most, whereas a node will likely have many event listeners).\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  // hack to let ShadyRoots have event listeners\n  // event listener will be on host, but `currentTarget`\n  // will be set to shadyroot for event listener\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n\n  let wrappers = fnOrObj.__eventWrappers;\n  if (wrappers) {\n    // Stop if the wrapper function has already been created.\n    if (findListener(wrappers, target, type, capture, once, passive) > -1) {\n      return;\n    }\n  } else {\n    fnOrObj.__eventWrappers = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this.removeEventListener(type, fnOrObj, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    let lastCurrentTargetDesc;\n    if (target !== this) {\n      // replace `currentTarget` to make `target` and `relatedTarget` correct for inside the shadowroot\n      lastCurrentTargetDesc = Object.getOwnPropertyDescriptor(e, 'currentTarget');\n      Object.defineProperty(e, 'currentTarget', {get() { return target }, configurable: true});\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(target) > -1) {\n      if (e.target === e.relatedTarget) {\n        if (e.eventPhase === Event.BUBBLING_PHASE) {\n          e.stopImmediatePropagation();\n        }\n        return;\n      }\n      // prevent non-bubbling events from triggering bubbling handlers on shadowroot, but only if not in capture phase\n      if (e.eventPhase !== Event.CAPTURING_PHASE && !e.bubbles && e.target !== target) {\n        return;\n      }\n      let ret = (typeof fnOrObj === 'object' && fnOrObj.handleEvent) ?\n        fnOrObj.handleEvent(e) :\n        fnOrObj.call(target, e);\n      if (target !== this) {\n        // replace the \"correct\" `currentTarget`\n        if (lastCurrentTargetDesc) {\n          Object.defineProperty(e, 'currentTarget', lastCurrentTargetDesc);\n          lastCurrentTargetDesc = null;\n        } else {\n          delete e['currentTarget'];\n        }\n      }\n      return ret;\n    }\n  };\n  // Store the wrapper information.\n  fnOrObj.__eventWrappers.push({\n    node: this,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    let ael = this instanceof Window ? nativeMethods.windowAddEventListener :\n      nativeMethods.addEventListener;\n    ael.call(this, type, wrapperFn, optionsOrCapture);\n  }\n}\n\n/**\n * @this {Event}\n */\nexport function removeEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  let wrappers = getEventWrappers(fnOrObj);\n  if (wrappers) {\n    let idx = findListener(wrappers, target, type, capture, once, passive);\n    if (idx > -1) {\n      wrapperFn = wrappers.splice(idx, 1)[0].wrapperFn;\n      // Cleanup.\n      if (!wrappers.length) {\n        fnOrObj.__eventWrappers = undefined;\n      }\n    }\n  }\n  let rel = this instanceof Window ? nativeMethods.windowRemoveEventListener :\n    nativeMethods.removeEventListener;\n  rel.call(this, type, wrapperFn || fnOrObj, optionsOrCapture);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window.addEventListener(ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // patch event prototype if we can\n  if (utils.settings.hasDescriptors) {\n    utils.patchPrototype(event, eventMixin);\n  // and fallback to patching instance\n  } else {\n    utils.extend(event, eventMixin);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(window.Event);\nlet PatchedCustomEvent = mixinComposedFlag(window.CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(window.MouseEvent);\n\nexport function patchEvents() {\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n  activateFocusEventOverrides();\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as mutation from './logical-mutation.js';\nimport {calculateSplices} from './array-splice.js';\nimport * as utils from './utils.js';\nimport {enqueue} from './flush.js';\nimport {recordChildNodes} from './logical-tree.js';\nimport {removeChild, insertBefore, dispatchEvent} from './native-methods.js';\nimport {parentNode, childNodes} from './native-tree.js';\nimport {patchShadowRootAccessors} from './patch-accessors.js';\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\nconst CATCHALL_NAME = '__catchall';\n\n/**\n * @constructor\n * @extends {ShadowRoot}\n */\nexport let ShadyRoot = function(token, host, options) {\n  if (token !== ShadyRootConstructionToken) {\n    throw new TypeError('Illegal constructor');\n  }\n  // NOTE: this strange construction is necessary because\n  // DocumentFragment cannot be subclassed on older browsers.\n  let shadowRoot = document.createDocumentFragment();\n  shadowRoot.__proto__ = ShadyRoot.prototype;\n  /** @type {ShadyRoot} */ (shadowRoot)._init(host, options);\n  return shadowRoot;\n};\n\nShadyRoot.prototype = Object.create(DocumentFragment.prototype);\n\nShadyRoot.prototype._init = function(host, options) {\n  // NOTE: set a fake local name so this element can be\n  // distinguished from a DocumentFragment when patching.\n  // FF doesn't allow this to be `localName`\n  this.__localName = 'ShadyRoot';\n  // logical dom setup\n  recordChildNodes(host);\n  recordChildNodes(this);\n  // root <=> host\n  this.host = host;\n  this._mode = options && options.mode;\n  host.__shady = host.__shady || {};\n  host.__shady.root = this;\n  host.__shady.publicRoot = this._mode !== 'closed' ? this : null;\n  // state flags\n  this._renderPending = false;\n  this._hasRendered = false;\n  this._slotList = [];\n  this._slotMap = null;\n  // fast path initial render: remove existing physical dom.\n  let c$ = childNodes(host);\n  for (let i=0, l=c$.length; i < l; i++) {\n    removeChild.call(host, c$[i])\n  }\n}\n\n// async render\nShadyRoot.prototype._asyncRender = function() {\n  if (!this._renderPending) {\n    this._renderPending = true;\n    enqueue(() => this._render());\n  }\n}\n\n// returns the oldest renderPending ancestor root.\nShadyRoot.prototype._getRenderRoot = function() {\n  let renderRoot = this;\n  let root = this;\n  while (root) {\n    if (root._renderPending) {\n      renderRoot = root;\n    }\n    root = root._rendererForHost();\n  }\n  return renderRoot;\n}\n\n// Returns the shadyRoot `this.host` if `this.host`\n// has children that require distribution.\nShadyRoot.prototype._rendererForHost = function() {\n  let root = this.host.getRootNode();\n  if (utils.isShadyRoot(root)) {\n    let c$ = this.host.childNodes;\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._isInsertionPoint(c)) {\n        return root;\n      }\n    }\n  }\n}\n\nShadyRoot.prototype._render = function() {\n  if (this._renderPending) {\n    this._getRenderRoot()['_renderRoot']();\n  }\n}\n\n// NOTE: avoid renaming to ease testability.\nShadyRoot.prototype['_renderRoot'] = function() {\n  this._renderPending = false;\n  this._distribute();\n  this._compose();\n  this._hasRendered = true;\n}\n\nShadyRoot.prototype._distribute = function() {\n  // capture # of previously assigned nodes to help determine if dirty.\n  for (let i=0, slot; i < this._slotList.length; i++) {\n    slot = this._slotList[i];\n    this._clearSlotAssignedNodes(slot);\n  }\n  // distribute host children.\n  for (let n=this.host.firstChild; n; n=n.nextSibling) {\n    this._distributeNodeToSlot(n);\n  }\n  // fallback content, slotchange, and dirty roots\n  for (let i=0, slot; i < this._slotList.length; i++) {\n    slot = this._slotList[i];\n    // distribute fallback content\n    if (!slot.__shady.assignedNodes.length) {\n      for (let n=slot.firstChild; n; n=n.nextSibling) {\n        this._distributeNodeToSlot(n, slot);\n      }\n    }\n    const slotParent = slot.parentNode;\n    const slotParentRoot = slotParent.__shady && slotParent.__shady.root;\n    if (slotParentRoot && slotParentRoot._hasInsertionPoint()) {\n      slotParentRoot['_renderRoot']();\n    }\n    this._addAssignedToFlattenedNodes(slot.__shady.flattenedNodes,\n      slot.__shady.assignedNodes);\n    let prevAssignedNodes = slot.__shady._previouslyAssignedNodes;\n    if (prevAssignedNodes) {\n      for (let i=0; i < prevAssignedNodes.length; i++) {\n        prevAssignedNodes[i].__shady._prevAssignedSlot = null;\n      }\n      slot.__shady._previouslyAssignedNodes = null;\n      // dirty if previously less assigned nodes than previously assigned.\n      if (prevAssignedNodes.length > slot.__shady.assignedNodes.length) {\n        slot.__shady.dirty = true;\n      }\n    }\n    /* Note: A slot is marked dirty whenever a node is newly assigned to it\n    or a node is assigned to a different slot (done in `_distributeNodeToSlot`)\n    or if the number of nodes assigned to the slot has decreased (done above);\n     */\n    if (slot.__shady.dirty) {\n      slot.__shady.dirty = false;\n      this._fireSlotChange(slot);\n    }\n  }\n}\n\n/**\n * Distributes given `node` to the appropriate slot based on its `slot`\n * attribute. If `forcedSlot` is given, then the node is distributed to the\n * `forcedSlot`.\n * Note: slot to which the node is assigned will be marked dirty for firing\n * `slotchange`.\n * @param {Node} node\n * @param {Node=} forcedSlot\n *\n */\nShadyRoot.prototype._distributeNodeToSlot = function(node, forcedSlot) {\n  node.__shady = node.__shady || {};\n  let oldSlot = node.__shady._prevAssignedSlot;\n  node.__shady._prevAssignedSlot = null;\n  let slot = forcedSlot;\n  if (!slot) {\n    let name = node.slot || CATCHALL_NAME;\n    const list = this._slotMap[name];\n    slot = list && list[0];\n  }\n  if (slot) {\n    slot.__shady.assignedNodes.push(node);\n    node.__shady.assignedSlot = slot;\n  } else {\n    node.__shady.assignedSlot = undefined;\n  }\n  if (oldSlot !== node.__shady.assignedSlot) {\n    if (node.__shady.assignedSlot) {\n      node.__shady.assignedSlot.__shady.dirty = true;\n    }\n  }\n}\n\n/**\n * Clears the assignedNodes tracking data for a given `slot`. Note, the current\n * assigned node data is tracked (via _previouslyAssignedNodes and\n * _prevAssignedSlot) to see if `slotchange` should fire. This data may be out\n *  of date at this time because the assigned nodes may have already been\n * distributed to another root. This is ok since this data is only used to\n * track changes.\n * @param {HTMLSlotElement} slot\n */\nShadyRoot.prototype._clearSlotAssignedNodes = function(slot) {\n  let n$ = slot.__shady.assignedNodes;\n  slot.__shady.assignedNodes = [];\n  slot.__shady.flattenedNodes = [];\n  slot.__shady._previouslyAssignedNodes = n$;\n  if (n$) {\n    for (let i=0; i < n$.length; i++) {\n      let n = n$[i];\n      n.__shady._prevAssignedSlot = n.__shady.assignedSlot;\n      // only clear if it was previously set to this slot;\n      // this helps ensure that if the node has otherwise been distributed\n      // ignore it.\n      if (n.__shady.assignedSlot === slot) {\n        n.__shady.assignedSlot = null;\n      }\n    }\n  }\n}\n\nShadyRoot.prototype._addAssignedToFlattenedNodes = function(flattened, asssigned) {\n  for (let i=0, n; (i<asssigned.length) && (n=asssigned[i]); i++) {\n    if (n.localName == 'slot') {\n      this._addAssignedToFlattenedNodes(flattened, n.__shady.assignedNodes);\n    } else {\n      flattened.push(asssigned[i]);\n    }\n  }\n}\n\nShadyRoot.prototype._fireSlotChange = function(slot) {\n  // NOTE: cannot bubble correctly here so not setting bubbles: true\n  // Safari tech preview does not bubble but chrome does\n  // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n  dispatchEvent.call(slot, new Event('slotchange'));\n  if (slot.__shady.assignedSlot) {\n    this._fireSlotChange(slot.__shady.assignedSlot);\n  }\n}\n\n// Reify dom such that it is at its correct rendering position\n// based on logical distribution.\n// NOTE: here we only compose parents of <slot> elements and not the\n// shadowRoot into the host. The latter is performend via a fast path\n// in the `logical-mutation`.insertBefore.\nShadyRoot.prototype._compose = function() {\n  const slots = this._slotList;\n  let composeList = [];\n  for (let i=0; i < slots.length; i++) {\n    const parent = slots[i].parentNode;\n    /* compose node only if:\n      (1) parent does not have a shadowRoot since shadowRoot has already\n      composed into the host\n      (2) we're not already composing it\n      [consider (n^2) but rare better than Set]\n    */\n    if (!(parent.__shady && parent.__shady.root) &&\n      composeList.indexOf(parent) < 0) {\n      composeList.push(parent);\n    }\n  }\n  for (let i=0; i < composeList.length; i++) {\n    const node = composeList[i];\n    const targetNode = node === this ? this.host : node;\n    this._updateChildNodes(targetNode, this._composeNode(node));\n  }\n}\n\n// Returns the list of nodes which should be rendered inside `node`.\nShadyRoot.prototype._composeNode = function(node) {\n  let children = [];\n  let c$ = node.childNodes;\n  for (let i = 0; i < c$.length; i++) {\n    let child = c$[i];\n    // Note: if we see a slot here, the nodes are guaranteed to need to be\n    // composed here. This is because if there is redistribution, it has\n    // already been handled by this point.\n    if (this._isInsertionPoint(child)) {\n      let flattenedNodes = child.__shady.flattenedNodes;\n      for (let j = 0; j < flattenedNodes.length; j++) {\n        let distributedNode = flattenedNodes[j];\n          children.push(distributedNode);\n      }\n    } else {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\nShadyRoot.prototype._isInsertionPoint = function(node) {\n    return node.localName == 'slot';\n  }\n\n// Ensures that the rendered node list inside `container` is `children`.\nShadyRoot.prototype._updateChildNodes = function(container, children) {\n  let composed = childNodes(container);\n  let splices = calculateSplices(children, composed);\n  // process removals\n  for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n    for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n      // check if the node is still where we expect it is before trying\n      // to remove it; this can happen if we move a node and\n      // then schedule its previous host for distribution resulting in\n      // the node being removed here.\n      if (parentNode(n) === container) {\n        removeChild.call(container, n);\n      }\n      composed.splice(s.index + d, 1);\n    }\n    d -= s.addedCount;\n  }\n  // process adds\n  for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n    next = composed[s.index];\n    for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n      n = children[j];\n      insertBefore.call(container, n, next);\n      composed.splice(j, 0, n);\n    }\n  }\n}\n\n/**\n * Adds the given slots. Slots are maintained in an dom-ordered list.\n * In addition a map of name to slot is updated.\n */\nShadyRoot.prototype._addSlots = function(slots) {\n  let slotNamesToSort;\n  this._slotMap = this._slotMap || {};\n  this._slotList = this._slotList || [];\n  for (let i=0; i < slots.length; i++) {\n    let slot = slots[i];\n    // ensure insertionPoints's and their parents have logical dom info.\n    // save logical tree info\n    // a. for shadyRoot\n    // b. for insertion points (fallback)\n    // c. for parents of insertion points\n    slot.__shady = slot.__shady || {};\n    recordChildNodes(slot);\n    recordChildNodes(slot.parentNode);\n    let name = this._nameForSlot(slot);\n    if (this._slotMap[name]) {\n      slotNamesToSort = slotNamesToSort || {};\n      slotNamesToSort[name] = true;\n      this._slotMap[name].push(slot);\n    } else {\n      this._slotMap[name] = [slot];\n    }\n    this._slotList.push(slot);\n  }\n  if (slotNamesToSort) {\n    for (let n in slotNamesToSort) {\n      this._slotMap[n] = this._sortSlots(this._slotMap[n]);\n    }\n  }\n}\n\nShadyRoot.prototype._nameForSlot = function(slot) {\n  const name = slot['name'] || slot.getAttribute('name') || CATCHALL_NAME;\n  slot.__slotName = name;\n  return name;\n}\n\n/**\n * Slots are kept in an ordered list. Slots with the same name\n * are sorted here by tree order.\n */\nShadyRoot.prototype._sortSlots = function(slots) {\n  // NOTE: Cannot use `compareDocumentPosition` because it's not polyfilled,\n  // but the code here could be used to polyfill the preceeding/following info\n  // in `compareDocumentPosition`.\n  return slots.sort((a, b) => {\n    let listA = ancestorList(a);\n    let listB = ancestorList(b);\n    for (var i=0; i < listA.length; i++) {\n      let nA = listA[i];\n      let nB = listB[i];\n      if (nA !== nB) {\n        let c$ = Array.from(nA.parentNode.childNodes);\n        return c$.indexOf(nA) - c$.indexOf(nB);\n      }\n    }\n  });\n}\n\nfunction ancestorList(node) {\n  let ancestors = [];\n  do {\n    ancestors.unshift(node);\n  } while ((node = node.parentNode));\n  return ancestors;\n}\n\n// NOTE: could be used to help polyfill `document.contains`.\nfunction contains(container, node) {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Removes from tracked slot data any slots contained within `container` and\n * then updates the tracked data (_slotList and _slotMap).\n * Any removed slots also have their `assignedNodes` removed from comopsed dom.\n */\nShadyRoot.prototype._removeContainedSlots = function(container) {\n  let didRemove;\n  this._slotMap = this._slotMap || {};\n  this._slotList = this._slotList || [];\n  const map = this._slotMap;\n  for (let n in map) {\n    let slots = map[n];\n    for (let i=0; i < slots.length; i++) {\n      let slot = slots[i];\n      if (contains(container, slot)) {\n        slots.splice(i, 1);\n        const x = this._slotList.indexOf(slot);\n        if (x >= 0) {\n          this._slotList.splice(x, 1);\n        }\n        i--;\n        this._removeFlattenedNodes(slot);\n        didRemove = true;\n      }\n    }\n  }\n  return didRemove;\n}\n\nShadyRoot.prototype._updateSlotName = function(slot) {\n  const oldName = slot.__slotName;\n  const name = this._nameForSlot(slot);\n  if (name === oldName) {\n    return;\n  }\n  // remove from existing tracking\n  let slots = this._slotMap[oldName];\n  const i = slots.indexOf(slot);\n  if (i >= 0) {\n    slots.splice(i, 1);\n  }\n  // add to new location and sort if nedessary\n  let list = this._slotMap[name] || (this._slotMap[name] = []);\n  list.push(slot);\n  if (list.length > 1) {\n    this._slotMap[name] = this._sortSlots(list);\n  }\n}\n\nShadyRoot.prototype._removeFlattenedNodes = function(slot) {\n  let n$ = slot.__shady.flattenedNodes;\n  if (n$) {\n    for (let i=0; i<n$.length; i++) {\n      let node = n$[i];\n      let parent = parentNode(node);\n      if (parent) {\n        removeChild.call(parent, node);\n      }\n    }\n  }\n}\n\nShadyRoot.prototype._hasInsertionPoint = function() {\n  return Boolean(this._slotList.length);\n}\n\nShadyRoot.prototype.addEventListener = function(type, fn, optionsOrCapture) {\n  if (typeof optionsOrCapture !== 'object') {\n    optionsOrCapture = {\n      capture: Boolean(optionsOrCapture)\n    }\n  }\n  optionsOrCapture.__shadyTarget = this;\n  this.host.addEventListener(type, fn, optionsOrCapture);\n}\n\nShadyRoot.prototype.removeEventListener = function(type, fn, optionsOrCapture) {\n  if (typeof optionsOrCapture !== 'object') {\n    optionsOrCapture = {\n      capture: Boolean(optionsOrCapture)\n    }\n  }\n  optionsOrCapture.__shadyTarget = this;\n  this.host.removeEventListener(type, fn, optionsOrCapture);\n}\n\nShadyRoot.prototype.getElementById = function(id) {\n  let result = mutation.query(this, function(n) {\n    return n.id == id;\n  }, function(n) {\n    return Boolean(n);\n  })[0];\n  return result || null;\n}\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport function attachShadow(host, options) {\n  if (!host) {\n    throw 'Must provide a host.';\n  }\n  if (!options) {\n    throw 'Not enough arguments.'\n  }\n  return new ShadyRoot(ShadyRootConstructionToken, host, options);\n}\n\npatchShadowRootAccessors(ShadyRoot.prototype);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {flush} from './flush.js';\nimport {dispatchEvent} from './native-methods.js';\nimport * as mutation from './logical-mutation.js';\nimport {ActiveElementAccessor, ShadowRootAccessor, patchAccessors} from './patch-accessors.js';\nimport {addEventListener, removeEventListener} from './patch-events.js';\nimport {attachShadow, ShadyRoot} from './attach-shadow.js';\n\nfunction getAssignedSlot(node) {\n  mutation.renderRootNode(node);\n  return node.__shady && node.__shady.assignedSlot || null;\n}\n\nlet windowMixin = {\n\n  // NOTE: ensure these methods are bound to `window` so that `this` is correct\n  // when called directly from global context without a receiver; e.g.\n  // `addEventListener(...)`.\n  addEventListener: addEventListener.bind(window),\n\n  removeEventListener: removeEventListener.bind(window)\n\n};\n\nlet nodeMixin = {\n\n  addEventListener: addEventListener,\n\n  removeEventListener: removeEventListener,\n\n  appendChild(node) {\n    return mutation.insertBefore(this, node);\n  },\n\n  insertBefore(node, ref_node) {\n    return mutation.insertBefore(this, node, ref_node);\n  },\n\n  removeChild(node) {\n    return mutation.removeChild(this, node);\n  },\n\n  /**\n   * @this {Node}\n   */\n  replaceChild(node, ref_node) {\n    mutation.insertBefore(this, node, ref_node);\n    mutation.removeChild(this, ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   */\n  cloneNode(deep) {\n    return mutation.cloneNode(this, deep);\n  },\n\n  /**\n   * @this {Node}\n   */\n  getRootNode(options) {\n    return mutation.getRootNode(this, options);\n  },\n\n  /**\n   * @this {Node}\n   */\n  get isConnected() {\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (ownerDocument && ownerDocument.contains && ownerDocument.contains(this)) return true;\n    const ownerDocumentElement = ownerDocument.documentElement;\n    if (ownerDocumentElement && ownerDocumentElement.contains && ownerDocumentElement.contains(this)) return true;\n\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node.parentNode || (node instanceof ShadyRoot ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  },\n\n  /**\n   * @this {Node}\n   */\n  dispatchEvent(event) {\n    flush();\n    return dispatchEvent.call(this, event);\n  }\n\n};\n\n// NOTE: For some reason 'Text' redefines 'assignedSlot'\nlet textMixin = {\n  /**\n   * @this {Text}\n   */\n  get assignedSlot() {\n    return getAssignedSlot(this);\n  }\n};\n\nlet fragmentMixin = {\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {DocumentFragment}\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mutation.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {DocumentFragment}\n   */\n  querySelectorAll(selector) {\n    return mutation.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n};\n\nlet slotMixin = {\n\n  /**\n   * @this {HTMLSlotElement}\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      mutation.renderRootNode(this);\n      return this.__shady ?\n        ((options && options.flatten ? this.__shady.flattenedNodes :\n        this.__shady.assignedNodes) || []) :\n        [];\n    }\n  }\n\n};\n\nlet elementMixin = utils.extendAll({\n\n  /**\n   * @this {HTMLElement}\n   */\n  setAttribute(name, value) {\n    mutation.setAttribute(this, name, value);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  removeAttribute(name) {\n    mutation.removeAttribute(this, name);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  set slot(value) {\n    mutation.setAttribute(this, 'slot', value);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  get assignedSlot() {\n    return getAssignedSlot(this);\n  }\n\n}, fragmentMixin, slotMixin);\n\nObject.defineProperties(elementMixin, ShadowRootAccessor);\n\nlet documentMixin = utils.extendAll({\n  /**\n   * @this {Document}\n   */\n  importNode(node, deep) {\n    return mutation.importNode(node, deep);\n  },\n\n  /**\n   * @this {Document}\n   */\n  getElementById(id) {\n    let result = mutation.query(this, function(n) {\n      return n.id == id;\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  }\n\n}, fragmentMixin);\n\nObject.defineProperties(documentMixin, {\n  '_activeElement': ActiveElementAccessor.activeElement\n});\n\nlet nativeBlur = HTMLElement.prototype.blur;\n\nlet htmlElementMixin = utils.extendAll({\n  /**\n   * @this {HTMLElement}\n   */\n  blur() {\n    let root = this.__shady && this.__shady.root;\n    let shadowActive = root && root.activeElement;\n    if (shadowActive) {\n      shadowActive.blur();\n    } else {\n      nativeBlur.call(this);\n    }\n  }\n})\n\nfunction patchBuiltin(proto, obj) {\n  let n$ = Object.getOwnPropertyNames(obj);\n  for (let i=0; i < n$.length; i++) {\n    let n = n$[i];\n    let d = Object.getOwnPropertyDescriptor(obj, n);\n    // NOTE: we prefer writing directly here because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (d.value) {\n      proto[n] = d.value;\n    } else {\n      Object.defineProperty(proto, n, d);\n    }\n  }\n}\n\n\n// Apply patches to builtins (e.g. Element.prototype). Some of these patches\n// can be done unconditionally (mostly methods like\n// `Element.prototype.appendChild`) and some can only be done when the browser\n// has proper descriptors on the builtin prototype\n// (e.g. `Element.prototype.firstChild`)`. When descriptors are not available,\n// elements are individually patched when needed (see e.g.\n// `patchInside/OutsideElementAccessors` in `patch-accessors.js`).\nexport function patchBuiltins() {\n  let nativeHTMLElement =\n    (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n    HTMLElement;\n  // These patches can always be done, for all supported browsers.\n  patchBuiltin(window.Node.prototype, nodeMixin);\n  patchBuiltin(window.Window.prototype, windowMixin);\n  patchBuiltin(window.Text.prototype, textMixin);\n  patchBuiltin(window.DocumentFragment.prototype, fragmentMixin);\n  patchBuiltin(window.Element.prototype, elementMixin);\n  patchBuiltin(window.Document.prototype, documentMixin);\n  if (window.HTMLSlotElement) {\n    patchBuiltin(window.HTMLSlotElement.prototype, slotMixin);\n  }\n  patchBuiltin(nativeHTMLElement.prototype, htmlElementMixin);\n  // These patches can *only* be done\n  // on browsers that have proper property descriptors on builtin prototypes.\n  // This includes: IE11, Edge, Chrome >= 4?; Safari >= 10, Firefox\n  // On older browsers (Chrome <= 4?, Safari 9), a per element patching\n  // strategy is used for patching accessors.\n  if (utils.settings.hasDescriptors) {\n    patchAccessors(window.Node.prototype);\n    patchAccessors(window.Text.prototype);\n    patchAccessors(window.DocumentFragment.prototype);\n    patchAccessors(window.Element.prototype);\n    patchAccessors(nativeHTMLElement.prototype);\n    patchAccessors(window.Document.prototype);\n    if (window.HTMLSlotElement) {\n      patchAccessors(window.HTMLSlotElement.prototype);\n    }\n  }\n}\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match('AppleWebKit/601') &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js'\nimport {parse, stringify, types, StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js'\nimport StyleTransformer from './style-transformer.js'\nimport * as StyleUtil from './style-util.js'\nimport * as RX from './common-regex.js'\nimport StyleInfo from './style-info.js'\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js'\nimport StyleTransformer from './style-transformer.js'\nimport {getIsExtends} from './style-util.js'\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js'\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js'\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  // defaultPrevented is broken in IE.\n  // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n  var workingDefaultPrevented = (function() {\n    var e = document.createEvent('Event');\n    e.initEvent('foo', true, true);\n    e.preventDefault();\n    return e.defaultPrevented;\n  })();\n\n  if (!workingDefaultPrevented) {\n    var origPreventDefault = Event.prototype.preventDefault;\n    Event.prototype.preventDefault = function() {\n      if (!this.cancelable) {\n        return;\n      }\n\n      origPreventDefault.call(this);\n\n      Object.defineProperty(this, 'defaultPrevented', {\n        get: function() {\n          return true;\n        },\n        configurable: true\n      });\n    };\n  }\n\n  var isIE = /Trident/.test(navigator.userAgent);\n\n  // CustomEvent constructor shim\n  if (!window.CustomEvent || isIE && (typeof window.CustomEvent !== 'function')) {\n    window.CustomEvent = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('CustomEvent');\n      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n      return e;\n    };\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  // Event constructor shim\n  if (!window.Event || isIE && (typeof window.Event !== 'function')) {\n    var origEvent = window.Event;\n    window.Event = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('Event');\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n      return e;\n    };\n    if (origEvent) {\n      for (var i in origEvent) {\n        window.Event[i] = origEvent[i];\n      }\n    }\n    window.Event.prototype = origEvent.prototype;\n  }\n\n  if (!window.MouseEvent || isIE && (typeof window.MouseEvent !== 'function')) {\n    var origMouseEvent = window.MouseEvent;\n    window.MouseEvent = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('MouseEvent');\n      e.initMouseEvent(inType,\n        Boolean(params.bubbles), Boolean(params.cancelable),\n        params.view || window, params.detail,\n        params.screenX, params.screenY, params.clientX, params.clientY,\n        params.ctrlKey, params.altKey, params.shiftKey, params.metaKey,\n        params.button, params.relatedTarget);\n      return e;\n    };\n    if (origMouseEvent) {\n      for (var i in origMouseEvent) {\n        window.MouseEvent[i] = origMouseEvent[i];\n      }\n    }\n    window.MouseEvent.prototype = origMouseEvent.prototype;\n  }\n\n  // ES6 stuff\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  if (!Object.assign) {\n    var assign = function(target, source) {\n      var n$ = Object.getOwnPropertyNames(source);\n      for (var i=0, p; i < n$.length; i++) {\n        p = n$[i];\n        target[p] = source[p];\n      }\n    }\n\n    Object.assign = function(target, sources) {\n      var args = [].slice.call(arguments, 1);\n      for (var i=0, s; i < args.length; i++) {\n        s = args[i];\n        if (s) {\n          assign(target, s);\n        }\n      }\n      return target;\n    }\n  }\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n// minimal template polyfill\n(function() {\n\n  var needsTemplate = (typeof HTMLTemplateElement === 'undefined');\n\n  // NOTE: Patch document.importNode to work around IE11 bug that\n  // casues children of a document fragment imported while\n  // there is a mutation observer to not have a parentNode (!?!)\n  // It's important that this is the first patch to `importNode` so that\n  // dom produced for later patches is correct.\n  if (/Trident/.test(navigator.userAgent)) {\n    (function() {\n      var Native_importNode = Document.prototype.importNode;\n      Document.prototype.importNode = function() {\n        var n = Native_importNode.apply(this, arguments);\n        // Copy all children to a new document fragment since\n        // this one may be broken\n        if (n.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          var f = this.createDocumentFragment();\n          f.appendChild(n);\n          return f;\n        } else {\n          return n;\n        }\n      };\n    })();\n  }\n\n  // NOTE: we rely on this cloneNode not causing element upgrade.\n  // This means this polyfill must load before the CE polyfill and\n  // this would need to be re-worked if a browser supports native CE\n  // but not <template>.\n  var Native_cloneNode = Node.prototype.cloneNode;\n  var Native_createElement = Document.prototype.createElement;\n  var Native_importNode = Document.prototype.importNode;\n\n  // returns true if nested templates cannot be cloned (they cannot be on\n  // some impl's like Safari 8 and Edge)\n  // OR if cloning a document fragment does not result in a document fragment\n  var needsCloning = (function() {\n    if (!needsTemplate) {\n      var t = document.createElement('template');\n      var t2 = document.createElement('template');\n      t2.content.appendChild(document.createElement('div'));\n      t.content.appendChild(t2);\n      var clone = t.cloneNode(true);\n      return (clone.content.childNodes.length === 0 || clone.content.firstChild.content.childNodes.length === 0\n        || !(document.createDocumentFragment().cloneNode() instanceof DocumentFragment));\n    }\n  })();\n\n  var TEMPLATE_TAG = 'template';\n  var PolyfilledHTMLTemplateElement = function() {};\n\n  if (needsTemplate) {\n\n    var contentDoc = document.implementation.createHTMLDocument('template');\n    var canDecorate = true;\n\n    var templateStyle = document.createElement('style');\n    templateStyle.textContent = TEMPLATE_TAG + '{display:none;}';\n\n    var head = document.head;\n    head.insertBefore(templateStyle, head.firstElementChild);\n\n    /**\n      Provides a minimal shim for the <template> element.\n    */\n    PolyfilledHTMLTemplateElement.prototype = Object.create(HTMLElement.prototype);\n\n\n    // if elements do not have `innerHTML` on instances, then\n    // templates can be patched by swizzling their prototypes.\n    var canProtoPatch =\n      !(document.createElement('div').hasOwnProperty('innerHTML'));\n\n    /**\n      The `decorate` method moves element children to the template's `content`.\n      NOTE: there is no support for dynamically adding elements to templates.\n    */\n    PolyfilledHTMLTemplateElement.decorate = function(template) {\n      // if the template is decorated, return fast\n      if (template.content) {\n        return;\n      }\n      template.content = contentDoc.createDocumentFragment();\n      var child;\n      while (child = template.firstChild) {\n        template.content.appendChild(child);\n      }\n      // NOTE: prefer prototype patching for performance and\n      // because on some browsers (IE11), re-defining `innerHTML`\n      // can result in intermittent errors.\n      if (canProtoPatch) {\n        template.__proto__ = PolyfilledHTMLTemplateElement.prototype;\n      } else {\n        template.cloneNode = function(deep) {\n          return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n        };\n        // add innerHTML to template, if possible\n        // Note: this throws on Safari 7\n        if (canDecorate) {\n          try {\n            defineInnerHTML(template);\n          } catch (err) {\n            canDecorate = false;\n          }\n        }\n      }\n      // bootstrap recursively\n      PolyfilledHTMLTemplateElement.bootstrap(template.content);\n    };\n\n    function defineInnerHTML(obj) {\n      Object.defineProperty(obj, 'innerHTML', {\n        get: function() {\n          var o = '';\n          for (var e = this.content.firstChild; e; e = e.nextSibling) {\n            o += e.outerHTML || escapeData(e.data);\n          }\n          return o;\n        },\n        set: function(text) {\n          contentDoc.body.innerHTML = text;\n          PolyfilledHTMLTemplateElement.bootstrap(contentDoc);\n          while (this.content.firstChild) {\n            this.content.removeChild(this.content.firstChild);\n          }\n          while (contentDoc.body.firstChild) {\n            this.content.appendChild(contentDoc.body.firstChild);\n          }\n        },\n        configurable: true\n      });\n    }\n\n    defineInnerHTML(PolyfilledHTMLTemplateElement.prototype);\n\n    /**\n      The `bootstrap` method is called automatically and \"fixes\" all\n      <template> elements in the document referenced by the `doc` argument.\n    */\n    PolyfilledHTMLTemplateElement.bootstrap = function(doc) {\n      var templates = doc.querySelectorAll(TEMPLATE_TAG);\n      for (var i=0, l=templates.length, t; (i<l) && (t=templates[i]); i++) {\n        PolyfilledHTMLTemplateElement.decorate(t);\n      }\n    };\n\n    // auto-bootstrapping for main document\n    document.addEventListener('DOMContentLoaded', function() {\n      PolyfilledHTMLTemplateElement.bootstrap(document);\n    });\n\n    // Patch document.createElement to ensure newly created templates have content\n    Document.prototype.createElement = function() {\n      'use strict';\n      var el = Native_createElement.apply(this, arguments);\n      if (el.localName === 'template') {\n        PolyfilledHTMLTemplateElement.decorate(el);\n      }\n      return el;\n    };\n\n    var escapeDataRegExp = /[&\\u00A0<>]/g;\n\n    function escapeReplace(c) {\n      switch (c) {\n        case '&':\n          return '&amp;';\n        case '<':\n          return '&lt;';\n        case '>':\n          return '&gt;';\n        case '\\u00A0':\n          return '&nbsp;';\n      }\n    }\n\n    function escapeData(s) {\n      return s.replace(escapeDataRegExp, escapeReplace);\n    }\n  }\n\n  // make cloning/importing work!\n  if (needsTemplate || needsCloning) {\n\n    PolyfilledHTMLTemplateElement._cloneNode = function(template, deep) {\n      var clone = Native_cloneNode.call(template, false);\n      // NOTE: decorate doesn't auto-fix children because they are already\n      // decorated so they need special clone fixup.\n      if (this.decorate) {\n        this.decorate(clone);\n      }\n      if (deep) {\n        // NOTE: use native clone node to make sure CE's wrapped\n        // cloneNode does not cause elements to upgrade.\n        clone.content.appendChild(\n            Native_cloneNode.call(template.content, true));\n        // now ensure nested templates are cloned correctly.\n        this.fixClonedDom(clone.content, template.content);\n      }\n      return clone;\n    };\n\n    PolyfilledHTMLTemplateElement.prototype.cloneNode = function(deep) {\n      return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n    }\n\n    // Given a source and cloned subtree, find <template>'s in the cloned\n    // subtree and replace them with cloned <template>'s from source.\n    // We must do this because only the source templates have proper .content.\n    PolyfilledHTMLTemplateElement.fixClonedDom = function(clone, source) {\n      // do nothing if cloned node is not an element\n      if (!source.querySelectorAll) return;\n      // these two lists should be coincident\n      var s$ = source.querySelectorAll(TEMPLATE_TAG);\n      var t$ = clone.querySelectorAll(TEMPLATE_TAG);\n      for (var i=0, l=t$.length, t, s; i<l; i++) {\n        s = s$[i];\n        t = t$[i];\n        if (this.decorate) {\n          this.decorate(s);\n        }\n        t.parentNode.replaceChild(s.cloneNode(true), t);\n      }\n    };\n\n    // override all cloning to fix the cloned subtree to contain properly\n    // cloned templates.\n    Node.prototype.cloneNode = function(deep) {\n      var dom;\n      // workaround for Edge bug cloning documentFragments\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8619646/\n      if (this instanceof DocumentFragment) {\n        if (!deep) {\n          return this.ownerDocument.createDocumentFragment();\n        } else {\n          dom = this.ownerDocument.importNode(this, true);\n        }\n      } else {\n        dom = Native_cloneNode.call(this, deep);\n      }\n      // template.content is cloned iff `deep`.\n      if (deep) {\n        PolyfilledHTMLTemplateElement.fixClonedDom(dom, this);\n      }\n      return dom;\n    };\n\n    // NOTE: we are cloning instead of importing <template>'s.\n    // However, the ownerDocument of the cloned template will be correct!\n    // This is because the native import node creates the right document owned\n    // subtree and `fixClonedDom` inserts cloned templates into this subtree,\n    // thus updating the owner doc.\n    Document.prototype.importNode = function(element, deep) {\n      if (element.localName === TEMPLATE_TAG) {\n        return PolyfilledHTMLTemplateElement._cloneNode(element, deep);\n      } else {\n        var dom = Native_importNode.call(this, element, deep);\n        if (deep) {\n          PolyfilledHTMLTemplateElement.fixClonedDom(dom, element);\n        }\n        return dom;\n      }\n    };\n\n    if (needsCloning) {\n      window.HTMLTemplateElement.prototype.cloneNode = function(deep) {\n        return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n      };\n    }\n  }\n\n  if (needsTemplate) {\n    window.HTMLTemplateElement = PolyfilledHTMLTemplateElement;\n  }\n\n})();\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.ES6Promise=e()}(this,function(){\"use strict\";function t(t){var e=typeof t;return null!==t&&(\"object\"===e||\"function\"===e)}function e(t){return\"function\"==typeof t}function n(t){I=t}function r(t){J=t}function o(){return function(){return process.nextTick(a)}}function i(){return\"undefined\"!=typeof H?function(){H(a)}:c()}function s(){var t=0,e=new V(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){return t.port2.postMessage(0)}}function c(){var t=setTimeout;return function(){return t(a,1)}}function a(){for(var t=0;t<G;t+=2){var e=$[t],n=$[t+1];e(n),$[t]=void 0,$[t+1]=void 0}G=0}function f(){try{var t=require,e=t(\"vertx\");return H=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=arguments,r=this,o=new this.constructor(p);void 0===o[et]&&k(o);var i=r._state;return i?!function(){var t=n[i-1];J(function(){return x(i,o,t,r._result)})}():E(r,o,t,e),o}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function v(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function _(t){try{return t.then}catch(e){return it.error=e,it}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){J(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===rt?S(t,e._result):e._state===ot?j(t,e._result):E(e,void 0,function(e){return g(t,e)},function(e){return j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===l&&n.constructor.resolve===h?b(t,n):r===it?(j(t,it.error),it.error=null):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,v()):t(n)?w(e,n,_(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===nt&&(t._result=e,t._state=rt,0!==t._subscribers.length&&J(T,t))}function j(t,e){t._state===nt&&(t._state=ot,t._result=e,J(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+rt]=n,o[i+ot]=r,0===i&&t._state&&J(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,o=void 0,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return st.error=n,st}}function x(t,n,r,o){var i=e(r),s=void 0,u=void 0,c=void 0,a=void 0;if(i){if(s=P(r,o),s===st?(a=!0,u=s.error,s.error=null):c=!0,n===s)return void j(n,d())}else s=o,c=!0;n._state!==nt||(i&&c?g(n,s):a?j(n,u):t===rt?S(n,s):t===ot&&j(n,s))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return ut++}function k(t){t[et]=ut++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[et]||k(this.promise),B(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&S(this.promise,this._result))):j(this.promise,q())}function q(){return new Error(\"Array Methods must be provided an Array\")}function F(t){return new Y(this,t).promise}function D(t){var e=this;return new e(B(t)?function(n,r){for(var o=t.length,i=0;i<o;i++)e.resolve(t[i]).then(n,r)}:function(t,e){return e(new TypeError(\"You must pass an array to race.\"))})}function K(t){var e=this,n=new e(p);return j(n,t),n}function L(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function N(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function U(t){this[et]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&L(),this instanceof U?C(this,t):N())}function W(){var t=void 0;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;if(n){var r=null;try{r=Object.prototype.toString.call(n.resolve())}catch(e){}if(\"[object Promise]\"===r&&!n.cast)return}t.Promise=U}var z=void 0;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B=z,G=0,H=void 0,I=void 0,J=function(t,e){$[G]=t,$[G+1]=e,G+=2,2===G&&(I?I(a):tt())},Q=\"undefined\"!=typeof window?window:void 0,R=Q||{},V=R.MutationObserver||R.WebKitMutationObserver,X=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),Z=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,$=new Array(1e3),tt=void 0;tt=X?o():V?s():Z?u():void 0===Q&&\"function\"==typeof require?f():c();var et=Math.random().toString(36).substring(16),nt=void 0,rt=1,ot=2,it=new M,st=new M,ut=0;return Y.prototype._enumerate=function(t){for(var e=0;this._state===nt&&e<t.length;e++)this._eachEntry(t[e],e)},Y.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===h){var o=_(t);if(o===l&&t._state!==nt)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===U){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){return e(t)}),e)}else this._willSettleAt(r(t),e)},Y.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===nt&&(this._remaining--,t===ot?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},Y.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){return n._settledAt(rt,e,t)},function(t){return n._settledAt(ot,e,t)})},U.all=F,U.race=D,U.resolve=h,U.reject=K,U._setScheduler=n,U._setAsap=r,U._asap=J,U.prototype={constructor:U,then:l,\"catch\":function(t){return this.then(null,t)}},U.polyfill=W,U.Promise=U,U.polyfill(),U});","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n\n  'use strict';\n\n  // Establish scope.\n  window['WebComponents'] = window['WebComponents'] || {'flags':{}};\n\n  // loading script\n  var file = 'webcomponents-lite.js';\n  var script = document.querySelector('script[src*=\"' + file + '\"]');\n  var flagMatcher = /wc-(.+)/;\n\n  // Flags. Convert url arguments to flags\n  var flags = {};\n  if (!flags['noOpts']) {\n    // from url\n    location.search.slice(1).split('&').forEach(function(option) {\n      var parts = option.split('=');\n      var match;\n      if (parts[0] && (match = parts[0].match(flagMatcher))) {\n        flags[match[1]] = parts[1] || true;\n      }\n    });\n    // from script\n    if (script) {\n      for (var i=0, a; (a=script.attributes[i]); i++) {\n        if (a.name !== 'src') {\n          flags[a.name] = a.value || true;\n        }\n      }\n    }\n    // log flags\n    if (flags['log'] && flags['log']['split']) {\n      var parts = flags['log'].split(',');\n      flags['log'] = {};\n      parts.forEach(function(f) {\n        flags['log'][f] = true;\n      });\n    } else {\n      flags['log'] = {};\n    }\n  }\n\n  // exports\n  window['WebComponents']['flags'] = flags;\n  var forceShady = flags['shadydom'];\n  if (forceShady) {\n    window['ShadyDOM'] = window['ShadyDOM'] || {};\n    window['ShadyDOM']['force'] = forceShady;\n  }\n\n  var forceCE = flags['register'] || flags['ce'];\n  if (forceCE && window['customElements']) {\n    window['customElements']['forcePolyfill'] = forceCE;\n  }\n\n})();\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport let appendChild = Element.prototype.appendChild;\nexport let insertBefore = Element.prototype.insertBefore;\nexport let removeChild = Element.prototype.removeChild;\nexport let setAttribute = Element.prototype.setAttribute;\nexport let removeAttribute = Element.prototype.removeAttribute;\nexport let cloneNode = Element.prototype.cloneNode;\nexport let importNode = Document.prototype.importNode;\nexport let addEventListener = Element.prototype.addEventListener;\nexport let removeEventListener = Element.prototype.removeEventListener;\nexport let windowAddEventListener = Window.prototype.addEventListener;\nexport let windowRemoveEventListener = Window.prototype.removeEventListener;\nexport let dispatchEvent = Element.prototype.dispatchEvent;\nexport let querySelector = Element.prototype.querySelector;\nexport let querySelectorAll = Element.prototype.querySelectorAll;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\nimport * as utils from './utils.js';\nimport {flush, enqueue} from './flush.js';\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes.js';\nimport * as nativeMethods from './native-methods.js';\nimport * as nativeTree from './native-tree.js';\nimport {patchBuiltins} from './patch-builtins.js';\nimport {patchEvents} from './patch-events.js';\nimport {ShadyRoot} from './attach-shadow.js';\n\nif (utils.settings.inUse) {\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // TODO(sorvell): remove when Polymer does not depend on this\n    'patch': (node) => node,\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Apply patches to events...\n  patchEvents();\n  // Apply patches to builtins (e.g. Element.prototype) where applicable.\n  patchBuiltins();\n\n  window.ShadowRoot = ShadyRoot;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n    /** @type {!Map<string, !Array<!Element>>} */\n    const localNameToUpgradableElements = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      localNameToUpgradableElements.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Attempt to upgrade using *non-pending* definitions.\n        this._internals.upgradeElement(element);\n\n        // If the element was upgraded, then no pending definition applies to it.\n        if (element.__CE_state !== undefined) return;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the set of upgradable elements for that definition.\n        let upgradableElements = localNameToUpgradableElements.get(element.localName);\n        if (upgradableElements) {\n          upgradableElements.push(element);\n        }\n      },\n    });\n\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      this._internals.setDefinition(localName, definition);\n\n      // Attempt to upgrade all applicable elements.\n      const upgradableElements = localNameToUpgradableElements.get(definition.localName);\n      for (let i = 0; i < upgradableElements.length; i++) {\n        this._internals.upgradeElement(upgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js'\nimport {nativeShadow} from './style-settings.js'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js'\nimport {nativeShadow} from './style-settings.js'\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js'\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport let CustomStyleInterfaceInterface;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js'\nimport {nativeShadow, nativeCssVariables} from './style-settings.js'\nimport StyleTransformer from './style-transformer.js'\nimport * as StyleUtil from './style-util.js'\nimport StyleProperties from './style-properties.js'\nimport placeholderMap from './style-placeholder.js'\nimport StyleInfo from './style-info.js'\nimport StyleCache from './style-cache.js'\nimport {flush as watcherFlush} from './document-watcher.js'\nimport templateMap from './template-map.js'\nimport * as ApplyShimUtils from './apply-shim-utils.js'\nimport documentWait from './document-wait.js'\nimport {updateNativeProperties, detectMixin} from './common-utils.js'\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js' //eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js'\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js'\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})();\n"],"names":["isTrackingLogicalChildNodes","node","__shady","undefined","firstChild","isShadyRoot","obj","Boolean","__localName","ownerShadyRootForNode","root","getRootNode","matchesSelector","element","selector","matches","call","copyOwnProperty","name","source","target","pd","Object","getOwnPropertyDescriptor","defineProperty","extend","n","n$","getOwnPropertyNames","i","length","extendAll","sources","mixin","patchPrototype","proto","getPrototypeOf","hasOwnProperty","patchProto","create","__sourceProto","__proto__","microtask","callback","push","textContent","content","enqueue","scheduled","flush","didFlush","flushList","shift","filterMutations","mutations","targetRootNode","map","mutation","mutationInScope","addedNodes","nodes","Array","from","filter","m","escapeReplace","c","escapeAttr","s","replace","escapeAttrRegExp","escapeData","escapeDataRegExp","makeSet","arr","set","getOuterHTML","parentNode","nodeType","Node","ELEMENT_NODE","attr","tagName","localName","attrs","attributes","value","voidElements","getInnerHTML","TEXT_NODE","data","plaintextParents","COMMENT_NODE","console","error","Error","child","c$","childNodes","l","currentNode","nodeWalker","lastChild","previousSibling","nextSibling","parentElement","elementWalker","firstElementChild","lastElementChild","previousElementSibling","nextElementSibling","children","innerHTML","DOCUMENT_FRAGMENT_NODE","textWalker","document","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","nodeValue","clearNode","removeChild","getDocumentActiveElement","nativeActiveElementDescriptor","get","utils","hasDescriptors","activeElement","activeElementForNode","active","host","contains","activeRoot","patchAccessorGroup","descriptors","force","p","objDesc","configurable","warn","patchAccessors","OutsideAccessors","InsideAccessors","ActiveElementAccessor","recordInsertBefore","container","ref_node","resetTo","linkNode","ps","ns","recordRemoveChild","insertBefore","parent","preventNativeInsert","ownerRoot","slotsAdded","findContainedSlots","_asyncRender","hasShadowRootWithSlot","firstComposedNode","_addSlots","slots","querySelectorAll","preventNativeRemove","removingInsertionPoint","changeSlotContent","_removeContainedSlots","removeOwnerShadyRoot","hasCachedOwnerRoot","ownerShadyRoot","composed","flattened","flattenedNodes","_hasInsertionPoint","distributeAttributeChange","_updateSlotName","scheduleObserver","addedNode","removedNode","observer","removedNodes","schedule","options","documentElement","query","matcher","halter","list","queryElements","elements","queryElement","result","renderRootNode","_render","setAttribute","scopingShim","window","removeAttribute","cloneNode","deep","nativeMethods","nc","appendChild","importNode","ownerDocument","pathComposer","startNode","composedPath","current","startRoot","assignedSlot","retarget","refNode","path","ancestor","lastRoot","rootIdx","refNodePath","p$","indexOf","mixinComposedFlag","Base","klazz","type","event","__composed","prototype","fireHandlers","phase","hs","__handlers","fn","relatedTarget","__immediatePropagationStopped","retargetNonBubblingEvent","e","__propagationStopped","Event","AT_TARGET","lastFiredRoot","listenerSettingsEqual","savedListener","capture","once","passive","savedNode","savedType","savedCapture","savedOnce","savedPassive","findListener","wrappers","getEventWrappers","eventLike","__eventWrappers","addEventListener","fnOrObj","optionsOrCapture","__shadyTarget","this","wrapperFn","removeEventListener","lastCurrentTargetDesc","eventPhase","BUBBLING_PHASE","stopImmediatePropagation","CAPTURING_PHASE","bubbles","ret","handleEvent","nonBubblingEventsToRetarget","bubble","Window","idx","splice","activateFocusEventOverrides","ev","patchEvent","__relatedTarget","eventMixin","newSplice","index","removed","addedCount","calcEditDistances","currentStart","currentEnd","old","oldStart","oldEnd","rowCount","columnCount","distances","j","equals","north","west","spliceOperationsFromEditDistances","edits","northWest","min","EDIT_LEAVE","EDIT_UPDATE","EDIT_DELETE","EDIT_ADD","reverse","calcSplices","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","ops","splices","oldIndex","searchLength","index1","index2","count","currentValue","previousValue","calculateSplices","previous","ancestorList","ancestors","unshift","attachShadow","ShadyRoot","ShadyRootConstructionToken","getAssignedSlot","patchBuiltin","d","isValidCustomElementName","reserved","reservedTagList","has","validForm","test","isConnected","nativeValue","__CE_isImportDocument","Document","ShadowRoot","nextSiblingOrAncestorSibling","start","walkDeepDescendantElements","visitedImports","Set","getAttribute","import","add","shadowRoot","__CE_shadowRoot","setPropertyUnchecked","destination","parse","text","clean","parseCss","lex","cssText","RX","comments","port","StyleNode","OPEN_BRACE","CLOSE_BRACE","t","substring","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","rules","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","calcCssVariables","settings","nativeShadow","navigator","userAgent","CSS","supports","toCssText","nativeCssVariables","rulesForStyle","style","isKeyframesSelector","rule","forEachRule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","MEDIA_MATCH","applyCss","moniker","contextNode","createScopeStyle","createElement","applyStylePlaceHolder","placeHolder","createComment","after","lastHeadApplyNode","scope","head","applyStyle","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","setElementClassRaw","getIsExtends","is","typeExtension","extends","addToBitMask","bits","o","parseInt","v","getClasses","classes","classList","hasAttribute","getCurrentScope","StyleTransformer","SCOPE_NAME","handler","mxns","x","mxn","currentScope","dom","newScope","invalidate","elementName","template","templateMap","invalidateTemplate","CURRENT_VERSION","VALIDATING_VERSION","NEXT_VERSION","templateIsValid","templateIsValidating","startValidatingTemplate","_validating","then","documentWait","whenReady","readyPromise","Promise","resolve","readyState","updateNativeProperties","properties","removeProperty","setProperty","detectMixin","MIXIN_MATCH","VAR_ASSIGN","lastIndex","createEvent","initEvent","preventDefault","defaultPrevented","origPreventDefault","cancelable","isIE","CustomEvent","inType","params","initCustomEvent","detail","origEvent","MouseEvent","origMouseEvent","initMouseEvent","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","object","slice","assign","args","WebComponents","needsTemplate","HTMLTemplateElement","Native_importNode","apply","f","createDocumentFragment","Native_cloneNode","Native_createElement","needsCloning","t2","clone","DocumentFragment","PolyfilledHTMLTemplateElement","defineInnerHTML","outerHTML","body","bootstrap","contentDoc","implementation","createHTMLDocument","canDecorate","templateStyle","TEMPLATE_TAG","HTMLElement","canProtoPatch","decorate","_cloneNode","err","doc","templates","el","fixClonedDom","s$","t$","replaceChild","exports","module","define","amd","ES6Promise","H","a","setTimeout","G","$","constructor","et","k","_state","J","_result","E","h","g","TypeError","_","it","y","S","_label","b","rt","ot","w","A","_onerror","T","nt","_subscribers","M","P","st","u","C","O","ut","Y","_instanceConstructor","promise","B","_remaining","_enumerate","q","F","D","K","L","N","U","W","global","self","Function","toString","cast","z","isArray","I","tt","Q","R","V","MutationObserver","WebKitMutationObserver","X","process","Z","Uint8ClampedArray","importScripts","MessageChannel","nextTick","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","require","runOnLoop","runOnContext","random","_eachEntry","_settledAt","_willSettleAt","all","race","reject","_setScheduler","_setAsap","_asap","catch","polyfill","flags","script","querySelector","flagMatcher","search","forEach","option","parts","forceShady","forceCE","hasNativeShadowDOM","Element","desc","inUse","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","twiddle","queue","AsyncObserver","_scheduled","callbacks","takeRecords","cb","observeChildren","unobserveChildren","handle","_observer","delete","_callback","size","_node","windowAddEventListener","windowRemoveEventListener","dispatchEvent","SHOW_ALL","SHOW_ELEMENT","nativeInnerHTMLDesc","inertDoc","htmlContainer","nativeTree","item","tc","cn","join","ShadowRootAccessor","publicRoot","patchOutsideElementAccessors","__outsideAccessors","patchInsideElementAccessors","__insideAccessors","recordChildNodes","alwaysComposed","isTrusted","__composedPath","currentTarget","__relatedTargetComposedPath","stopPropagation","PatchedEvent","PatchedCustomEvent","PatchedMouseEvent","token","_init","_mode","mode","_renderPending","_hasRendered","_slotList","_slotMap","_this","_getRenderRoot","renderRoot","_rendererForHost","_isInsertionPoint","_distribute","_compose","slot","_clearSlotAssignedNodes","_distributeNodeToSlot","assignedNodes","slotParent","slotParentRoot","_addAssignedToFlattenedNodes","prevAssignedNodes","_previouslyAssignedNodes","_prevAssignedSlot","dirty","_fireSlotChange","forcedSlot","oldSlot","asssigned","composeList","targetNode","_updateChildNodes","_composeNode","distributedNode","next","slotNamesToSort","_nameForSlot","_sortSlots","__slotName","sort","listA","listB","nA","nB","didRemove","_removeFlattenedNodes","oldName","getElementById","id","windowMixin","bind","nodeMixin","ownerDocumentElement","textMixin","fragmentMixin","slotMixin","flatten","elementMixin","defineProperties","documentMixin","nativeBlur","blur","htmlElementMixin","shadowActive","ShadyDOM","nativeHTMLElement","Text","HTMLSlotElement","CustomElementState","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","definition","listener","patch","__CE_patched","__CE_state","CEState","custom","connectedCallback","upgradeElement","disconnectedCallback","upgrade","_this2","__CE_hasRegistry","__CE_documentLoadHandled","patchAndUpgradeTree","localNameToDefinition","constructionStack","failed","__CE_definition","attributeChangedCallback","observedAttributes","Utilities","oldValue","newValue","namespace","DocumentConstructionObserver","internals","_internals","_document","_handleMutations","disconnect","Deferred","_value","_resolve","_promise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_pendingDefinitions","_documentConstructionObserver","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","localNameToUpgradableElements","upgradableElements","setDefinition","deferred","prior","toPromise","some","outer","whenDefined","polyfillWrapFlushCallback","createElementNS","getAttributeNS","setAttributeNS","removeAttributeNS","AlreadyConstructedMarker","builtIn","connectedBefore","prepend","disconnectTree","connectTree","append","before","wasConnected","replaceWith","remove","priorCustomElements","constructorToDefinition","Native","Document_createElement","setPrototypeOf","Document_importNode","patchTree","Document_createElementNS","Document_prepend","Document_append","patch_textContent","baseDescriptor","enumerable","assignedValue","childNodesLength","insertedNodes","nativeResult","Node_insertBefore","nodeWasConnected","Node_appendChild","Node_cloneNode","Node_removeChild","nodeToInsert","nodeToRemove","Node_replaceChild","nodeToInsertWasConnected","thisIsConnected","Node_textContent","addPatch","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","Element_attachShadow","init","Element_innerHTML","HTMLElement_innerHTML","rawDiv","Element_setAttribute","Element_getAttribute","Element_setAttributeNS","Element_getAttributeNS","Element_removeAttribute","Element_removeAttributeNS","HTMLElement_insertAdjacentElement","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","customElements","ShadyCSS","nativeCss","VAR_CONSUMED","ANIMATION_MATCH","BRACKETED","shouldRemoveScope","_transformDom","_content","CLASS","styleRules","cssBuildType","StyleUtil","css","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","COMPLEX_SELECTOR_SEP","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","StyleInfo","ast","placeholder","ownStylePropertyNames","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","IS_IE","StyleProperties","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","collectProperties","collectCssText","rx","any","exec","collectConsumingCssText","valueForProperty","property","valueForProperties","fallback","propertyValue","colon","pp","output","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","selectorToMatch","key","parsedSelector","isRoot","isHost","hostProps","rootProps","whenHostOrRootRule","_element","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","elementStyles","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","transformStyles","placeholderMap","ce","origDefine","wrappedDefine","clazz","StyleCache","typeMax","cache","cacheEntry","ownPropertyNames","pn","tagname","styleElement","entry","_validate","childList","subtree","delayedStart","resolveFn","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","cs","getStyleForCustomStyle","styleToTransform","addCustomStyle","processStyles","needsEnqueue","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","_ensure","styles","_prepared","_getCssBuild","_gatherStyles","hasMixins","_cssBuild","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","ApplyShim","ApplyShimUtils","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_prepareHost","_isRootOwner","_applyStyleProperties","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","hostAndRootPropertiesForScope","propertyData","propertyDataFromStyles","propertiesMatchingHost","_mixinOverrideStyles","reify","overrides","styleSubtree","shadowChildren","_revalidateApplyShim","applyCustomStyle","documentRule","_this3","getComputedStyle","getPropertyValue","classString","scopeName","classAttr","k$","XSCOPE_NAME","prepareTemplate","getComputedStyleValue","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","elementExtends"],"mappings":"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"}