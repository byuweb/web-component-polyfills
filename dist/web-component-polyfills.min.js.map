{"version":3,"file":"web-component-polyfills.min.js","sources":["../bower_components/shadydom/src/utils.js","../bower_components/shadydom/src/flush.js","../bower_components/shadydom/src/observe-changes.js","../bower_components/shadydom/src/innerHTML.js","../bower_components/shadydom/src/native-tree.js","../bower_components/shadydom/src/patch-accessors.js","../bower_components/shadydom/src/logical-tree.js","../bower_components/shadydom/src/logical-mutation.js","../bower_components/shadydom/src/patch-events.js","../bower_components/shadydom/src/array-splice.js","../bower_components/shadydom/src/attach-shadow.js","../bower_components/shadydom/src/patch-builtins.js","../bower_components/custom-elements/src/Utilities.js","../bower_components/shadycss/src/css-parse.js","../bower_components/shadycss/src/style-settings.js","../bower_components/shadycss/src/style-util.js","../bower_components/shadycss/src/style-properties.js","../bower_components/shadycss/src/apply-shim-utils.js","../bower_components/shadycss/src/document-wait.js","../bower_components/shadycss/src/common-utils.js","../bower_components/webcomponents-platform/webcomponents-platform.js","../bower_components/template/template.js","../bower_components/es6-promise/dist/es6-promise.auto.min.js","../bower_components/webcomponentsjs/src/pre-polyfill.js","../bower_components/shadydom/src/native-methods.js","../bower_components/shadydom/src/distributor.js","../bower_components/shadydom/src/shadydom.js","../bower_components/custom-elements/src/CustomElementState.js","../bower_components/custom-elements/src/CustomElementInternals.js","../bower_components/custom-elements/src/DocumentConstructionObserver.js","../bower_components/custom-elements/src/Deferred.js","../bower_components/custom-elements/src/CustomElementRegistry.js","../bower_components/custom-elements/src/Patch/Native.js","../bower_components/custom-elements/src/AlreadyConstructedMarker.js","../bower_components/custom-elements/src/Patch/Interface/ParentNode.js","../bower_components/custom-elements/src/Patch/Interface/ChildNode.js","../bower_components/custom-elements/src/custom-elements.js","../bower_components/custom-elements/src/Patch/HTMLElement.js","../bower_components/custom-elements/src/Patch/Document.js","../bower_components/custom-elements/src/Patch/Node.js","../bower_components/custom-elements/src/Patch/Element.js","../bower_components/shadycss/src/common-regex.js","../bower_components/shadycss/src/style-transformer.js","../bower_components/shadycss/src/style-info.js","../bower_components/shadycss/src/style-placeholder.js","../bower_components/shadycss/src/style-cache.js","../bower_components/shadycss/src/document-watcher.js","../bower_components/shadycss/src/template-map.js","../bower_components/shadycss/src/custom-style-interface.js","../bower_components/shadycss/src/scoping-shim.js","../bower_components/shadycss/entrypoints/scoping-shim.js","../bower_components/webcomponentsjs/src/unresolved.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nlet desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nexport function ownerShadyRootForNode(node) {\n  let root = node.getRootNode();\n  if (isShadyRoot(root)) {\n    return root;\n  }\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto['__patchProto'] = patchProto;\n  }\n  // old browsers don't have setPrototypeOf\n  obj.__proto__ = proto['__patchProto'];\n}\n\n\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport function microtask(callback) {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  node.__shady = node.__shady || {};\n  if (!node.__shady.observer) {\n    node.__shady.observer = new AsyncObserver();\n  }\n  node.__shady.observer.callbacks.add(callback);\n  let observer = node.__shady.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      handle._node.__shady.observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {getInnerHTML} from './innerHTML'\n\nlet nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\nlet elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\nexport function parentNode(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.parentNode();\n}\n\nexport function firstChild(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.firstChild();\n}\n\nexport function lastChild(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.lastChild();\n}\n\nexport function previousSibling(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.previousSibling();\n}\n\nexport function nextSibling(node) {\n  nodeWalker.currentNode = node;\n  return nodeWalker.nextSibling();\n}\n\nexport function childNodes(node) {\n  let nodes = [];\n  nodeWalker.currentNode = node;\n  let n = nodeWalker.firstChild();\n  while (n) {\n    nodes.push(n);\n    n = nodeWalker.nextSibling();\n  }\n  return nodes;\n}\n\nexport function parentElement(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.parentNode();\n}\n\nexport function firstElementChild(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.firstChild();\n}\n\nexport function lastElementChild(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.lastChild();\n}\n\nexport function previousElementSibling(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.previousSibling();\n}\n\nexport function nextElementSibling(node) {\n  elementWalker.currentNode = node;\n  return elementWalker.nextSibling();\n}\n\nexport function children(node) {\n  let nodes = [];\n  elementWalker.currentNode = node;\n  let n = elementWalker.firstChild();\n  while (n) {\n    nodes.push(n);\n    n = elementWalker.nextSibling();\n  }\n  return nodes;\n}\n\nexport function innerHTML(node) {\n  return getInnerHTML(node, (n) => childNodes(n));\n}\n\nexport function textContent(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return node.nodeValue;\n  }\n  let textWalker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT,\n    null, false);\n  let content = '', n;\n  while ( (n = textWalker.nextNode()) ) {\n    // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n    // However, should probably patch it only on element.\n    content += n.nodeValue;\n  }\n  return content;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {getInnerHTML} from './innerHTML'\nimport * as nativeTree from './native-tree'\n\nfunction clearNode(node) {\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n}\n\nconst nativeInnerHTMLDesc = /** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML') ||\n  Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML'));\n\nconst inertDoc = document.implementation.createHTMLDocument('inert');\nconst htmlContainer = inertDoc.createElement('div');\n\nconst nativeActiveElementDescriptor =\n  /** @type {ObjectPropertyDescriptor} */(\n    Object.getOwnPropertyDescriptor(Document.prototype, 'activeElement')\n  );\nfunction getDocumentActiveElement() {\n  if (nativeActiveElementDescriptor && nativeActiveElementDescriptor.get) {\n    return nativeActiveElementDescriptor.get.call(document);\n  } else if (!utils.settings.hasDescriptors) {\n    return document.activeElement;\n  }\n}\n\nfunction activeElementForNode(node) {\n  let active = getDocumentActiveElement();\n  // In IE11, activeElement might be an empty object if the document is\n  // contained in an iframe.\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n  if (!active || !active.nodeType) {\n    return null;\n  }\n  let isShadyRoot = !!(utils.isShadyRoot(node));\n  if (node !== document) {\n    // If this node isn't a document or shady root, then it doesn't have\n    // an active element.\n    if (!isShadyRoot) {\n      return null;\n    }\n    // If this shady root's host is the active element or the active\n    // element is not a descendant of the host (in the composed tree),\n    // then it doesn't have an active element.\n    if (node.host === active ||\n        !node.host.contains(active)) {\n      return null;\n    }\n  }\n  // This node is either the document or a shady root of which the active\n  // element is a (composed) descendant of its host; iterate upwards to\n  // find the active element's most shallow host within it.\n  let activeRoot = utils.ownerShadyRootForNode(active);\n  while (activeRoot && activeRoot !== node) {\n    active = activeRoot.host;\n    activeRoot = utils.ownerShadyRootForNode(active);\n  }\n  if (node === document) {\n    // This node is the document, so activeRoot should be null.\n    return activeRoot ? null : active;\n  } else {\n    // This node is a non-document shady root, and it should be\n    // activeRoot.\n    return activeRoot === node ? active : null;\n  }\n}\n\nlet OutsideAccessors = {\n\n  parentElement: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.parentElement;\n      return l !== undefined ? l : nativeTree.parentElement(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.parentNode;\n      return l !== undefined ? l : nativeTree.parentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.nextSibling;\n      return l !== undefined ? l : nativeTree.nextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    /** @this {Node} */\n    get() {\n      let l = this.__shady && this.__shady.previousSibling;\n      return l !== undefined ? l : nativeTree.previousSibling(this);\n    },\n    configurable: true\n  },\n\n  className: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return this.getAttribute('class') || '';\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(value) {\n      this.setAttribute('class', value);\n    },\n    configurable: true\n  },\n\n  // fragment, element, document\n  nextElementSibling: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.nextSibling !== undefined) {\n        let n = this.nextSibling;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.nextSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.nextElementSibling(this);\n      }\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.previousSibling !== undefined) {\n        let n = this.previousSibling;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.previousSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.previousElementSibling(this);\n      }\n    },\n    configurable: true\n  }\n\n};\n\nlet InsideAccessors = {\n\n  childNodes: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        if (!this.__shady.childNodes) {\n          this.__shady.childNodes = [];\n          for (let n=this.firstChild; n; n=n.nextSibling) {\n            this.__shady.childNodes.push(n);\n          }\n        }\n        return this.__shady.childNodes;\n      } else {\n        return nativeTree.childNodes(this);\n      }\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    /** @this {HTMLElement} */\n    get() {\n      let l = this.__shady && this.__shady.firstChild;\n      return l !== undefined ? l : nativeTree.firstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n  /** @this {HTMLElement} */\n    get() {\n      let l = this.__shady && this.__shady.lastChild;\n      return l !== undefined ? l : nativeTree.lastChild(this);\n    },\n    configurable: true\n  },\n\n  textContent: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      } else {\n        return nativeTree.textContent(this);\n      }\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(text) {\n      if (this.nodeType !== Node.ELEMENT_NODE) {\n        // TODO(sorvell): can't do this if patch nodeValue.\n        this.nodeValue = text;\n      } else {\n        clearNode(this);\n        if (text) {\n          this.appendChild(document.createTextNode(text));\n        }\n      }\n    },\n    configurable: true\n  },\n\n  // fragment, element, document\n  firstElementChild: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        let n = this.firstChild;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.nextSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.firstElementChild(this);\n      }\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.lastChild !== undefined) {\n        let n = this.lastChild;\n        while (n && n.nodeType !== Node.ELEMENT_NODE) {\n          n = n.previousSibling;\n        }\n        return n;\n      } else {\n        return nativeTree.lastElementChild(this);\n      }\n    },\n    configurable: true\n  },\n\n  children: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        return Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        return nativeTree.children(this);\n      }\n    },\n    configurable: true\n  },\n\n  // element (HTMLElement on IE11)\n  innerHTML: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      let content = this.localName === 'template' ?\n        /** @type {HTMLTemplateElement} */(this).content : this;\n      if (this.__shady && this.__shady.firstChild !== undefined) {\n        return getInnerHTML(content);\n      } else {\n        return nativeTree.innerHTML(content);\n      }\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(text) {\n      let content = this.localName === 'template' ?\n        /** @type {HTMLTemplateElement} */(this).content : this;\n      clearNode(content);\n      if (nativeInnerHTMLDesc && nativeInnerHTMLDesc.set) {\n        nativeInnerHTMLDesc.set.call(htmlContainer, text);\n      } else {\n        htmlContainer.innerHTML = text;\n      }\n      while (htmlContainer.firstChild) {\n        content.appendChild(htmlContainer.firstChild);\n      }\n    },\n    configurable: true\n  }\n\n};\n\n// Note: Can be patched on element prototype on all browsers.\n// Must be patched on instance on browsers that support native Shadow DOM\n// but do not have builtin accessors (old Chrome).\nexport let ShadowRootAccessor = {\n\n  shadowRoot: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return this.__shady && this.__shady.root || null;\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set(value) {\n      this.__shady = this.__shady || {};\n      this.__shady.root = value;\n    },\n    configurable: true\n  }\n};\n\n// Note: Can be patched on document prototype on browsers with builtin accessors.\n// Must be patched separately on simulated ShadowRoot.\n// Must be patched as `_activeElement` on browsers without builtin accessors.\nexport let ActiveElementAccessor = {\n\n  activeElement: {\n    /**\n     * @this {HTMLElement}\n     */\n    get() {\n      return activeElementForNode(this);\n    },\n    /**\n     * @this {HTMLElement}\n     */\n    set() {},\n    configurable: true\n  }\n\n};\n\n// patch a group of descriptors on an object only if it exists or if the `force`\n// argument is true.\n/**\n * @param {!Object} obj\n * @param {!Object} descriptors\n * @param {boolean=} force\n */\nfunction patchAccessorGroup(obj, descriptors, force) {\n  for (let p in descriptors) {\n    let objDesc = Object.getOwnPropertyDescriptor(obj, p);\n    if ((objDesc && objDesc.configurable) ||\n      (!objDesc && force)) {\n      Object.defineProperty(obj, p, descriptors[p]);\n    } else if (force) {\n      console.warn('Could not define', p, 'on', obj);\n    }\n  }\n}\n\n// patch dom accessors on proto where they exist\nexport function patchAccessors(proto) {\n  patchAccessorGroup(proto, OutsideAccessors);\n  patchAccessorGroup(proto, InsideAccessors);\n  patchAccessorGroup(proto, ActiveElementAccessor);\n}\n\n// ensure element descriptors (IE/Edge don't have em)\nexport function patchShadowRootAccessors(proto) {\n  patchAccessorGroup(proto, InsideAccessors, true);\n  patchAccessorGroup(proto, ActiveElementAccessor, true);\n}\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = utils.settings.hasDescriptors ?\n  function() {} : function(element) {\n    if (!(element.__shady && element.__shady.__outsideAccessors)) {\n      element.__shady = element.__shady || {};\n      element.__shady.__outsideAccessors = true;\n      patchAccessorGroup(element, OutsideAccessors, true);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = utils.settings.hasDescriptors ?\n  function() {} : function(element) {\n    if (!(element.__shady && element.__shady.__insideAccessors)) {\n      element.__shady = element.__shady || {};\n      element.__shady.__insideAccessors = true;\n      patchAccessorGroup(element, InsideAccessors, true);\n      patchAccessorGroup(element, ShadowRootAccessor, true);\n    }\n  }\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-accessors'\nimport {firstChild, lastChild, childNodes} from './native-tree'\n\nexport function recordInsertBefore(node, container, ref_node) {\n  patchInsideElementAccessors(container);\n  container.__shady = container.__shady || {};\n  if (container.__shady.firstChild !== undefined) {\n    container.__shady.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    let c$ = node.childNodes;\n    for (let i=0; i < c$.length; i++) {\n      linkNode(c$[i], container, ref_node);\n    }\n    // cleanup logical dom in doc fragment.\n    node.__shady = node.__shady || {};\n    let resetTo = (node.__shady.firstChild !== undefined) ? null : undefined;\n    node.__shady.firstChild = node.__shady.lastChild = resetTo;\n    node.__shady.childNodes = resetTo;\n  } else {\n    linkNode(node, container, ref_node);\n  }\n}\n\nfunction linkNode(node, container, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  node.__shady = node.__shady || {};\n  container.__shady = container.__shady || {};\n  if (ref_node) {\n    ref_node.__shady = ref_node.__shady || {};\n  }\n  // update ref_node.previousSibling <-> node\n  node.__shady.previousSibling = ref_node ? ref_node.__shady.previousSibling :\n    container.lastChild;\n  let ps = node.__shady.previousSibling;\n  if (ps && ps.__shady) {\n    ps.__shady.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let ns = node.__shady.nextSibling = ref_node;\n  if (ns && ns.__shady) {\n    ns.__shady.previousSibling = node;\n  }\n  // update node <-> container\n  node.__shady.parentNode = container;\n  if (ref_node) {\n    if (ref_node === container.__shady.firstChild) {\n      container.__shady.firstChild = node;\n    }\n  } else {\n    container.__shady.lastChild = node;\n    if (!container.__shady.firstChild) {\n      container.__shady.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  container.__shady.childNodes = null;\n}\n\nexport function recordRemoveChild(node, container) {\n  node.__shady = node.__shady || {};\n  container.__shady = container.__shady || {};\n  if (node === container.__shady.firstChild) {\n    container.__shady.firstChild = node.__shady.nextSibling;\n  }\n  if (node === container.__shady.lastChild) {\n    container.__shady.lastChild = node.__shady.previousSibling;\n  }\n  let p = node.__shady.previousSibling;\n  let n = node.__shady.nextSibling;\n  if (p) {\n    p.__shady = p.__shady || {};\n    p.__shady.nextSibling = n;\n  }\n  if (n) {\n    n.__shady = n.__shady || {};\n    n.__shady.previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  node.__shady.parentNode = node.__shady.previousSibling =\n    node.__shady.nextSibling = undefined;\n  if (container.__shady.childNodes !== undefined) {\n    // remove caching of childNodes\n    container.__shady.childNodes = null;\n  }\n}\n\nexport let recordChildNodes = function(node) {\n  if (!node.__shady || node.__shady.firstChild === undefined) {\n    node.__shady = node.__shady || {};\n    node.__shady.firstChild = firstChild(node);\n    node.__shady.lastChild = lastChild(node);\n    patchInsideElementAccessors(node);\n    let c$ = node.__shady.childNodes = childNodes(node);\n    for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n      n.__shady = n.__shady || {};\n      n.__shady.parentNode = node;\n      n.__shady.nextSibling = c$[i+1] || null;\n      n.__shady.previousSibling = c$[i-1] || null;\n      patchOutsideElementAccessors(n);\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport * as logicalTree from './logical-tree'\nimport * as nativeMethods from './native-methods'\nimport {parentNode} from './native-tree'\n\n/**\n * Try to add node. Record logical info, track insertion points, perform\n * distribution iff needed. Return true if the add is handled.\n * @param {Node} container\n * @param {Node} node\n * @param {Node} ref_node\n * @return {boolean}\n */\nfunction addNode(container, node, ref_node) {\n  let ownerRoot = utils.ownerShadyRootForNode(container);\n  let ipAdded;\n  if (ownerRoot) {\n    // optimization: special insertion point tracking\n    // TODO(sorvell): verify that the renderPending check here should not be needed.\n    if (node['__noInsertionPoint'] && !ownerRoot._changePending) {\n      ownerRoot._skipUpdateInsertionPoints = true;\n    }\n    // note: we always need to see if an insertion point is added\n    // since this saves logical tree info; however, invalidation state\n    // needs\n    ipAdded = _maybeAddInsertionPoint(node, container, ownerRoot);\n    // invalidate insertion points IFF not already invalid!\n    if (ipAdded) {\n      ownerRoot._skipUpdateInsertionPoints = false;\n    }\n  }\n  if (container.__shady && container.__shady.firstChild !== undefined) {\n    logicalTree.recordInsertBefore(node, container, ref_node);\n  }\n  // if not distributing and not adding to host, do a fast path addition\n  // TODO(sorvell): revisit flow since `ipAdded` needed here if\n  // node is a fragment that has a patched QSA.\n  let handled = _maybeDistribute(node, container, ownerRoot, ipAdded) ||\n    container.__shady.root ||\n    // TODO(sorvell): we *should* consider the add \"handled\"\n    // if the container or ownerRoot is `_renderPending`.\n    // However, this will regress performance right now and is blocked on a\n    // fix for https://github.com/webcomponents/shadydom/issues/95\n    // handled if ref_node parent is a root that is rendering.\n    (ref_node && utils.isShadyRoot(ref_node.parentNode) &&\n      ref_node.parentNode._renderPending);\n  return handled;\n}\n\n\n/**\n * Try to remove node: update logical info and perform distribution iff\n * needed. Return true if the removal has been handled.\n * note that it's possible for both the node's host and its parent\n * to require distribution... both cases are handled here.\n * @param {Node} node\n * @return {boolean}\n */\nfunction removeNode(node) {\n  // important that we want to do this only if the node has a logical parent\n  let logicalParent = node.__shady && node.__shady.parentNode;\n  let distributed;\n  let ownerRoot = utils.ownerShadyRootForNode(node);\n  if (logicalParent || ownerRoot) {\n    // distribute node's parent iff needed\n    distributed = maybeDistributeParent(node);\n    if (logicalParent) {\n      logicalTree.recordRemoveChild(node, logicalParent);\n    }\n    // remove node from root and distribute it iff needed\n    let removedDistributed = ownerRoot &&\n      _removeDistributedChildren(ownerRoot, node);\n    let addedInsertionPoint = (logicalParent && ownerRoot &&\n      logicalParent.localName === ownerRoot.getInsertionPointTag());\n    if (removedDistributed || addedInsertionPoint) {\n      ownerRoot._skipUpdateInsertionPoints = false;\n      updateRootViaContentChange(ownerRoot);\n    }\n  }\n  _removeOwnerShadyRoot(node);\n  return distributed;\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction _scheduleObserver(node, addedNode, removedNode) {\n  let observer = node.__shady && node.__shady.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\nfunction removeNodeFromParent(node, logicalParent) {\n  if (logicalParent) {\n    _scheduleObserver(logicalParent, null, node);\n    return removeNode(node);\n  } else {\n    // composed but not logical parent\n    if (node.parentNode) {\n      nativeMethods.removeChild.call(node.parentNode, node);\n    }\n    _removeOwnerShadyRoot(node);\n  }\n}\n\nfunction _hasCachedOwnerRoot(node) {\n  return Boolean(node.__shady && node.__shady.ownerShadyRoot !== undefined);\n}\n\n/**\n * @param {Node} node\n * @param {Object=} options\n */\nexport function getRootNode(node, options) { // eslint-disable-line no-unused-vars\n  if (!node || !node.nodeType) {\n    return;\n  }\n  node.__shady = node.__shady || {};\n  let root = node.__shady.ownerShadyRoot;\n  if (root === undefined) {\n    if (utils.isShadyRoot(node)) {\n      root = node;\n    } else {\n      let parent = node.parentNode;\n      root = parent ? getRootNode(parent) : node;\n    }\n    // memo-ize result for performance but only memo-ize\n    // result if node is in the document. This avoids a problem where a root\n    // can be cached while an element is inside a fragment.\n    // If this happens and we cache the result, the value can become stale\n    // because for perf we avoid processing the subtree of added fragments.\n    if (document.documentElement.contains(node)) {\n      node.__shady.ownerShadyRoot = root;\n    }\n  }\n  return root;\n}\n\nfunction _maybeDistribute(node, container, ownerRoot, ipAdded) {\n  // TODO(sorvell): technically we should check non-fragment nodes for\n  // <content> children but since this case is assumed to be exceedingly\n  // rare, we avoid the cost and will address with some specific api\n  // when the need arises.  For now, the user must call\n  // distributeContent(true), which updates insertion points manually\n  // and forces distribution.\n  let insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';\n  let fragContent = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) &&\n    !node['__noInsertionPoint'] &&\n    insertionPointTag && node.querySelector(insertionPointTag);\n  let wrappedContent = fragContent &&\n    (fragContent.parentNode.nodeType !==\n    Node.DOCUMENT_FRAGMENT_NODE);\n  let hasContent = fragContent || (node.localName === insertionPointTag);\n  // There are 3 possible cases where a distribution may need to occur:\n  // 1. <content> being inserted (the host of the shady root where\n  //    content is inserted needs distribution)\n  // 2. children being inserted into parent with a shady root (parent\n  //    needs distribution)\n  // 3. container is an insertionPoint\n  if (hasContent || (container.localName === insertionPointTag) || ipAdded) {\n    if (ownerRoot) {\n      // note, insertion point list update is handled after node\n      // mutations are complete\n      updateRootViaContentChange(ownerRoot);\n    }\n  }\n  let needsDist = _nodeNeedsDistribution(container);\n  if (needsDist) {\n    let root = container.__shady && container.__shady.root;\n    updateRootViaContentChange(root);\n  }\n  // Return true when distribution will fully handle the composition\n  // Note that if a content was being inserted that was wrapped by a node,\n  // and the parent does not need distribution, return false to allow\n  // the nodes to be added directly, after which children may be\n  // distributed and composed into the wrapping node(s)\n  return needsDist || (hasContent && !wrappedContent);\n}\n\n/* note: parent argument is required since node may have an out\nof date parent at this point; returns true if a <content> is being added */\nfunction _maybeAddInsertionPoint(node, parent, root) {\n  let added;\n  let insertionPointTag = root.getInsertionPointTag();\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n    !node['__noInsertionPoint']) {\n    let c$ = node.querySelectorAll(insertionPointTag);\n    for (let i=0, n, np, na; (i<c$.length) && (n=c$[i]); i++) {\n      np = n.parentNode;\n      // don't allow node's parent to be fragment itself\n      if (np === node) {\n        np = parent;\n      }\n      na = _maybeAddInsertionPoint(n, np, root);\n      added = added || na;\n    }\n  } else if (node.localName === insertionPointTag) {\n    logicalTree.recordChildNodes(parent);\n    logicalTree.recordChildNodes(node);\n    added = true;\n  }\n  return added;\n}\n\nfunction _nodeNeedsDistribution(node) {\n  let root = node && node.__shady && node.__shady.root;\n  return root && root.hasInsertionPoint();\n}\n\nfunction _removeDistributedChildren(root, container) {\n  let hostNeedsDist;\n  let ip$ = root._getInsertionPoints();\n  for (let i=0; i<ip$.length; i++) {\n    let insertionPoint = ip$[i];\n    if (_contains(container, insertionPoint)) {\n      let dc$ = insertionPoint.assignedNodes({flatten: true});\n      for (let j=0; j<dc$.length; j++) {\n        hostNeedsDist = true;\n        let node = dc$[j];\n        let parent = parentNode(node);\n        if (parent) {\n          nativeMethods.removeChild.call(parent, node);\n        }\n      }\n    }\n  }\n  return hostNeedsDist;\n}\n\nfunction _contains(container, node) {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n}\n\nfunction _removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (_hasCachedOwnerRoot(node)) {\n    let c$ = node.childNodes;\n    for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n      _removeOwnerShadyRoot(n);\n    }\n  }\n  node.__shady = node.__shady || {};\n  node.__shady.ownerShadyRoot = undefined;\n}\n\n// TODO(sorvell): This will fail if distribution that affects this\n// question is pending; this is expected to be exceedingly rare, but if\n// the issue comes up, we can force a flush in this case.\nfunction firstComposedNode(insertionPoint) {\n  let n$ = insertionPoint.assignedNodes({flatten: true});\n  let root = getRootNode(insertionPoint);\n  for (let i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {\n    // means that we're composed to this spot.\n    if (root.isFinalDestination(insertionPoint, n)) {\n      return n;\n    }\n  }\n}\n\nfunction maybeDistributeParent(node) {\n  let parent = node.parentNode;\n  if (_nodeNeedsDistribution(parent)) {\n    updateRootViaContentChange(parent.__shady.root);\n    return true;\n  }\n}\n\nfunction updateRootViaContentChange(root) {\n  // mark root as mutation based on a mutation\n  root._changePending = true;\n  root.update();\n}\n\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    maybeDistributeParent(node);\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = utils.ownerShadyRootForNode(node);\n    if (root) {\n      root.update();\n    }\n  }\n}\n\n// NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n// but it's also generally useful to recurse through the element tree\n// and is used by Polymer's styling system.\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  _queryElements(node.childNodes, matcher,\n    halter, list);\n  return list;\n}\n\nfunction _queryElements(elements, matcher, halter, list) {\n  for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n    if (c.nodeType === Node.ELEMENT_NODE &&\n        _queryElement(c, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction _queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  _queryElements(node.childNodes, matcher,\n    halter, list);\n}\n\nexport function renderRootNode(element) {\n  var root = element.getRootNode();\n  if (utils.isShadyRoot(root)) {\n    root.render();\n  }\n}\n\nlet scopingShim = null;\n\nexport function setAttribute(node, attr, value) {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n  } else {\n    nativeMethods.setAttribute.call(node, attr, value);\n    distributeAttributeChange(node, attr);\n  }\n}\n\nexport function removeAttribute(node, attr) {\n  nativeMethods.removeAttribute.call(node, attr);\n  distributeAttributeChange(node, attr);\n}\n\n// cases in which we may not be able to just do standard native call\n// 1. container has a shadyRoot (needsDistribution IFF the shadyRoot\n// has an insertion point)\n// 2. container is a shadyRoot (don't distribute, instead set\n// container to container.host.\n// 3. node is <content> (host of container needs distribution)\n/**\n * @param {Node} parent\n * @param {Node} node\n * @param {Node=} ref_node\n */\nexport function insertBefore(parent, node, ref_node) {\n  if (ref_node) {\n    let p = ref_node.__shady && ref_node.__shady.parentNode;\n    if ((p !== undefined && p !== parent) ||\n      (p === undefined && parentNode(ref_node) !== parent)) {\n      throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n       `before which the new node is to be inserted is not a child of this node.`);\n    }\n  }\n  if (ref_node === node) {\n    return node;\n  }\n  // remove node from its current position iff it's in a tree.\n  if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n    let parent = node.__shady && node.__shady.parentNode;\n    removeNodeFromParent(node, parent);\n  }\n  if (!addNode(parent, node, ref_node)) {\n    if (ref_node) {\n      // if ref_node is an insertion point replace with first distributed node\n      let root = utils.ownerShadyRootForNode(ref_node);\n      if (root) {\n        ref_node = ref_node.localName === root.getInsertionPointTag() ?\n          firstComposedNode(/** @type {!HTMLSlotElement} */(ref_node)) : ref_node;\n      }\n    }\n    // if adding to a shadyRoot, add to host instead\n    let container = utils.isShadyRoot(parent) ? /** @type {ShadowRoot} */(parent).host : parent;\n    if (ref_node) {\n      nativeMethods.insertBefore.call(container, node, ref_node);\n    } else {\n      nativeMethods.appendChild.call(container, node);\n    }\n  }\n  _scheduleObserver(parent, node);\n  return node;\n}\n\n/**\n  Removes the given `node` from the element's `lightChildren`.\n  This method also performs dom composition.\n*/\nexport function removeChild(parent, node) {\n  if (node.parentNode !== parent) {\n    throw Error('The node to be removed is not a child of this node: ' +\n      node);\n  }\n  if (!removeNode(node)) {\n    // if removing from a shadyRoot, remove form host instead\n    let container = utils.isShadyRoot(parent) ?\n      parent.host :\n      parent;\n    // not guaranteed to physically be in container; e.g.\n    // undistributed nodes.\n    let nativeParent = parentNode(node);\n    if (container === nativeParent) {\n      nativeMethods.removeChild.call(container, node);\n    }\n  }\n  _scheduleObserver(parent, null, node);\n  return node;\n}\n\nexport function cloneNode(node, deep) {\n  if (node.localName == 'template') {\n    return nativeMethods.cloneNode.call(node, deep);\n  } else {\n    let n = nativeMethods.cloneNode.call(node, false);\n    if (deep) {\n      let c$ = node.childNodes;\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = c$[i].cloneNode(true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n}\n\n// note: Though not technically correct, we fast path `importNode`\n// when called on a node not owned by the main document.\n// This allows, for example, elements that cannot\n// contain custom elements and are therefore not likely to contain shadowRoots\n// to cloned natively. This is a fairly significant performance win.\nexport function importNode(node, deep) {\n  if (node.ownerDocument !== document) {\n    return nativeMethods.importNode.call(document, node, deep);\n  }\n  let n = nativeMethods.importNode.call(document, node, false);\n  if (deep) {\n    let c$ = node.childNodes;\n    for (let i=0, nc; i < c$.length; i++) {\n      nc = importNode(c$[i], true);\n      n.appendChild(nc);\n    }\n  }\n  return n;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {addEventListener as nativeAddEventListener,\n  removeEventListener as nativeRemoveEventListener} from './native-methods'\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet eventMixin = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    // isTrusted may not exist in this browser, so just check if isTrusted is explicitly false\n    if (this.isTrusted !== false && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {value: Event.AT_TARGET});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    if (i === 0 || (node.shadowRoot && node.shadowRoot === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node.getRootNode();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\n/**\n * @this {Event}\n */\nexport function addEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n\n  // The callback `fn` might be used for multiple nodes/events. Since we generate\n  // a wrapper function, we need to keep track of it when we remove the listener.\n  // It's more efficient to store the node/type/options information as Array in\n  // `fn` itself rather than the node (we assume that the same callback is used\n  // for few nodes at most, whereas a node will likely have many event listeners).\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  if (fn.__eventWrappers) {\n    // Stop if the wrapper function has already been created.\n    for (let i = 0; i < fn.__eventWrappers.length; i++) {\n      if (listenerSettingsEqual(fn.__eventWrappers[i], this, type, capture, once, passive)) {\n        return;\n      }\n    }\n  } else {\n    fn.__eventWrappers = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this.removeEventListener(type, fn, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(this) > -1) {\n      if (e.eventPhase === Event.BUBBLING_PHASE) {\n        if (e.target === e.relatedTarget) {\n          e.stopImmediatePropagation();\n          return;\n        }\n      }\n      return fn.call(this, e);\n    }\n  };\n  // Store the wrapper information.\n  fn.__eventWrappers.push({\n    node: this,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    nativeAddEventListener.call(this, type, wrapperFn, optionsOrCapture);\n  }\n}\n\n/**\n * @this {Event}\n */\nexport function removeEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  if (fn.__eventWrappers) {\n    for (let i = 0; i < fn.__eventWrappers.length; i++) {\n      if (listenerSettingsEqual(fn.__eventWrappers[i], this, type, capture, once, passive)) {\n        wrapperFn = fn.__eventWrappers.splice(i, 1)[0].wrapperFn;\n        // Cleanup.\n        if (!fn.__eventWrappers.length) {\n          fn.__eventWrappers = undefined;\n        }\n        break;\n      }\n    }\n  }\n\n  nativeRemoveEventListener.call(this, type, wrapperFn || fn, optionsOrCapture);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window.addEventListener(ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // patch event prototype if we can\n  if (utils.settings.hasDescriptors) {\n    utils.patchPrototype(event, eventMixin);\n  // and fallback to patching instance\n  } else {\n    utils.extend(event, eventMixin);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(window.Event);\nlet PatchedCustomEvent = mixinComposedFlag(window.CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(window.MouseEvent);\n\nexport function patchEvents() {\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n  activateFocusEventOverrides();\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {calculateSplices} from './array-splice'\nimport * as utils from './utils'\nimport {enqueue} from './flush'\nimport {recordChildNodes} from './logical-tree'\nimport {removeChild, insertBefore} from './native-methods'\nimport {parentNode, childNodes} from './native-tree'\nimport {patchShadowRootAccessors} from './patch-accessors'\nimport Distributor from './distributor'\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\n/**\n * @constructor\n * @extends {ShadowRoot}\n */\nexport let ShadyRoot = function(token, host) {\n  if (token !== ShadyRootConstructionToken) {\n    throw new TypeError('Illegal constructor');\n  }\n  // NOTE: this strange construction is necessary because\n  // DocumentFragment cannot be subclassed on older browsers.\n  let shadowRoot = document.createDocumentFragment();\n  shadowRoot.__proto__ = ShadyRoot.prototype;\n  /** @type {ShadyRoot} */ (shadowRoot)._init(host);\n  return shadowRoot;\n};\n\nShadyRoot.prototype = Object.create(DocumentFragment.prototype);\n\nShadyRoot.prototype._init = function(host) {\n  // NOTE: set a fake local name so this element can be\n  // distinguished from a DocumentFragment when patching.\n  // FF doesn't allow this to be `localName`\n  this.__localName = 'ShadyRoot';\n  // logical dom setup\n  recordChildNodes(host);\n  recordChildNodes(this);\n  // root <=> host\n  host.shadowRoot = this;\n  this.host = host;\n  // state flags\n  this._renderPending = false;\n  this._hasRendered = false;\n  this._changePending = false;\n  this._distributor = new Distributor(this);\n  this.update();\n}\n\n\n// async render\nShadyRoot.prototype.update = function() {\n  if (!this._renderPending) {\n    this._renderPending = true;\n    enqueue(() => this.render());\n  }\n}\n\n// returns the oldest renderPending ancestor root.\nShadyRoot.prototype._getRenderRoot = function() {\n  let renderRoot = this;\n  let root = this;\n  while (root) {\n    if (root._renderPending) {\n      renderRoot = root;\n    }\n    root = root._rendererForHost();\n  }\n  return renderRoot;\n}\n\n// Returns the shadyRoot `this.host` if `this.host`\n// has children that require distribution.\nShadyRoot.prototype._rendererForHost = function() {\n  let root = this.host.getRootNode();\n  if (utils.isShadyRoot(root)) {\n    let c$ = this.host.childNodes;\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._distributor.isInsertionPoint(c)) {\n        return root;\n      }\n    }\n  }\n}\n\nShadyRoot.prototype.render = function() {\n  if (this._renderPending) {\n    this._getRenderRoot()['_render']();\n  }\n}\n\n// NOTE: avoid renaming to ease testability.\nShadyRoot.prototype['_render'] = function() {\n  this._renderPending = false;\n  this._changePending = false;\n  if (!this._skipUpdateInsertionPoints) {\n    this.updateInsertionPoints();\n  } else if (!this._hasRendered) {\n    this.__insertionPoints = [];\n  }\n  this._skipUpdateInsertionPoints = false;\n  // TODO(sorvell): can add a first render optimization here\n  // to use if there are no insertion points\n  // 1. clear host node of composed children\n  // 2. appendChild the shadowRoot itself or (more robust) its logical children\n  // NOTE: this didn't seem worth it in perf testing\n  // but not ready to delete this info.\n  // logical\n  this.distribute();\n  // physical\n  this.compose();\n  this._hasRendered = true;\n}\n\nShadyRoot.prototype.forceRender = function() {\n  this._renderPending = true;\n  this.render();\n}\n\nShadyRoot.prototype.distribute = function() {\n  let dirtyRoots = this._distributor.distribute();\n  for (let i=0; i<dirtyRoots.length; i++) {\n    dirtyRoots[i]['_render']();\n  }\n}\n\nShadyRoot.prototype.updateInsertionPoints = function() {\n  let i$ = this._insertionPoints;\n  // if any insertion points have been removed, clear their distribution info\n  if (i$) {\n    for (let i=0, c; i < i$.length; i++) {\n      c = i$[i];\n      if (c.getRootNode() !== this) {\n        this._distributor.clearAssignedSlots(c);\n      }\n    }\n  }\n  i$ = this._insertionPoints = this._distributor.getInsertionPoints();\n  // ensure insertionPoints's and their parents have logical dom info.\n  // save logical tree info\n  // a. for shadyRoot\n  // b. for insertion points (fallback)\n  // c. for parents of insertion points\n  for (let i=0, c; i < i$.length; i++) {\n    c = i$[i];\n    c.__shady = c.__shady || {};\n    recordChildNodes(c);\n    recordChildNodes(c.parentNode);\n  }\n}\n\nShadyRoot.prototype.compose = function() {\n  // compose self\n  // note: it's important to mark this clean before distribution\n  // so that attachment that provokes additional distribution (e.g.\n  // adding something to your parentNode) works\n  this._composeTree();\n  // TODO(sorvell): See fast paths here in Polymer v1\n  // (these seem unnecessary)\n}\n\n// Reify dom such that it is at its correct rendering position\n// based on logical distribution.\nShadyRoot.prototype._composeTree = function() {\n  this._updateChildNodes(this.host, this._composeNode(this.host));\n  let p$ = this._getInsertionPoints();\n  for (let i=0, l=p$.length, p, parent; (i<l) && (p=p$[i]); i++) {\n    parent = p.parentNode;\n    if ((parent !== this.host) && (parent !== this)) {\n      this._updateChildNodes(parent, this._composeNode(parent));\n    }\n  }\n}\n\n// Returns the list of nodes which should be rendered inside `node`.\nShadyRoot.prototype._composeNode = function(node) {\n  let children = [];\n  let c$ = ((node.__shady && node.__shady.root) || node).childNodes;\n  for (let i = 0; i < c$.length; i++) {\n    let child = c$[i];\n    if (this._distributor.isInsertionPoint(child)) {\n      let distributedNodes = child.__shady.distributedNodes ||\n        (child.__shady.distributedNodes = []);\n      for (let j = 0; j < distributedNodes.length; j++) {\n        let distributedNode = distributedNodes[j];\n        if (this.isFinalDestination(child, distributedNode)) {\n          children.push(distributedNode);\n        }\n      }\n    } else {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\nShadyRoot.prototype.isFinalDestination = function(insertionPoint, node) {\n  return this._distributor.isFinalDestination(\n    insertionPoint, node);\n}\n\n// Ensures that the rendered node list inside `container` is `children`.\nShadyRoot.prototype._updateChildNodes = function(container, children) {\n  let composed = childNodes(container);\n  let splices = calculateSplices(children, composed);\n  // process removals\n  for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n    for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n      // check if the node is still where we expect it is before trying\n      // to remove it; this can happen if we move a node and\n      // then schedule its previous host for distribution resulting in\n      // the node being removed here.\n      if (parentNode(n) === container) {\n        removeChild.call(container, n);\n      }\n      composed.splice(s.index + d, 1);\n    }\n    d -= s.addedCount;\n  }\n  // process adds\n  for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n    next = composed[s.index];\n    for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n      n = children[j];\n      insertBefore.call(container, n, next);\n      // TODO(sorvell): is this splice strictly needed?\n      composed.splice(j, 0, n);\n    }\n  }\n}\n\nShadyRoot.prototype.getInsertionPointTag = function() {\n  return this._distributor.insertionPointTag;\n}\n\nShadyRoot.prototype.hasInsertionPoint = function() {\n  return Boolean(this._insertionPoints && this._insertionPoints.length);\n}\n\nShadyRoot.prototype._getInsertionPoints = function() {\n  if (!this._insertionPoints) {\n    this.updateInsertionPoints();\n  }\n  return this._insertionPoints;\n}\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport function attachShadow(host, options) {\n  if (!host) {\n    throw 'Must provide a host.';\n  }\n  if (!options) {\n    throw 'Not enough arguments.'\n  }\n  return new ShadyRoot(ShadyRootConstructionToken, host);\n}\n\npatchShadowRootAccessors(ShadyRoot.prototype);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport * as mutation from './logical-mutation'\nimport {ActiveElementAccessor, ShadowRootAccessor, patchAccessors} from './patch-accessors'\nimport {addEventListener, removeEventListener} from './patch-events'\nimport {attachShadow, ShadyRoot} from './attach-shadow'\n\nfunction getAssignedSlot(node) {\n  mutation.renderRootNode(node);\n  return node.__shady && node.__shady.assignedSlot || null;\n}\n\nlet nodeMixin = {\n\n  addEventListener: addEventListener,\n\n  removeEventListener: removeEventListener,\n\n  appendChild(node) {\n    return mutation.insertBefore(this, node);\n  },\n\n  insertBefore(node, ref_node) {\n    return mutation.insertBefore(this, node, ref_node);\n  },\n\n  removeChild(node) {\n    return mutation.removeChild(this, node);\n  },\n\n  /**\n   * @this {Node}\n   */\n  replaceChild(node, ref_node) {\n    this.insertBefore(node, ref_node);\n    this.removeChild(ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   */\n  cloneNode(deep) {\n    return mutation.cloneNode(this, deep);\n  },\n\n  /**\n   * @this {Node}\n   */\n  getRootNode(options) {\n    return mutation.getRootNode(this, options);\n  },\n\n  /**\n   * @this {Node}\n   */\n  get isConnected() {\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (ownerDocument && ownerDocument.contains && ownerDocument.contains(this)) return true;\n    const ownerDocumentElement = ownerDocument.documentElement;\n    if (ownerDocumentElement && ownerDocumentElement.contains && ownerDocumentElement.contains(this)) return true;\n\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node.parentNode || (node instanceof ShadyRoot ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  }\n\n};\n\n// NOTE: For some reason `Text` redefines `assignedSlot`\nlet textMixin = {\n  /**\n   * @this {Text}\n   */\n  get assignedSlot() {\n    return getAssignedSlot(this);\n  }\n};\n\nlet fragmentMixin = {\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {DocumentFragment}\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mutation.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {DocumentFragment}\n   */\n  querySelectorAll(selector) {\n    return mutation.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n};\n\nlet slotMixin = {\n\n  /**\n   * @this {HTMLSlotElement}\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      mutation.renderRootNode(this);\n      return this.__shady ?\n        ((options && options.flatten ? this.__shady.distributedNodes :\n        this.__shady.assignedNodes) || []) :\n        [];\n    }\n  }\n\n};\n\nlet elementMixin = utils.extendAll({\n\n  /**\n   * @this {HTMLElement}\n   */\n  setAttribute(name, value) {\n    mutation.setAttribute(this, name, value);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  removeAttribute(name) {\n    mutation.removeAttribute(this, name);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  set slot(value) {\n    this.setAttribute('slot', value);\n  },\n\n  /**\n   * @this {HTMLElement}\n   */\n  get assignedSlot() {\n    return getAssignedSlot(this);\n  }\n\n}, fragmentMixin, slotMixin);\n\nObject.defineProperties(elementMixin, ShadowRootAccessor);\n\nlet documentMixin = utils.extendAll({\n  /**\n   * @this {Document}\n   */\n  importNode(node, deep) {\n    return mutation.importNode(node, deep);\n  }\n}, fragmentMixin);\n\nObject.defineProperties(documentMixin, {\n  '_activeElement': ActiveElementAccessor.activeElement\n});\n\nfunction patchBuiltin(proto, obj) {\n  let n$ = Object.getOwnPropertyNames(obj);\n  for (let i=0; i < n$.length; i++) {\n    let n = n$[i];\n    let d = Object.getOwnPropertyDescriptor(obj, n);\n    // NOTE: we prefer writing directly here because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (d.value) {\n      proto[n] = d.value;\n    } else {\n      Object.defineProperty(proto, n, d);\n    }\n  }\n}\n\n\n// Apply patches to builtins (e.g. Element.prototype). Some of these patches\n// can be done unconditionally (mostly methods like\n// `Element.prototype.appendChild`) and some can only be done when the browser\n// has proper descriptors on the builtin prototype\n// (e.g. `Element.prototype.firstChild`)`. When descriptors are not available,\n// elements are individually patched when needed (see e.g.\n// `patchInside/OutsideElementAccessors` in `patch-accessors.js`).\nexport function patchBuiltins() {\n  // These patches can always be done, for all supported browsers.\n  patchBuiltin(window.Node.prototype, nodeMixin);\n  patchBuiltin(window.Text.prototype, textMixin);\n  patchBuiltin(window.DocumentFragment.prototype, fragmentMixin);\n  patchBuiltin(window.Element.prototype, elementMixin);\n  patchBuiltin(window.Document.prototype, documentMixin);\n  if (window.HTMLSlotElement) {\n    patchBuiltin(window.HTMLSlotElement.prototype, slotMixin);\n  }\n  // These patches can *only* be done\n  // on browsers that have proper property descriptors on builtin prototypes.\n  // This includes: IE11, Edge, Chrome >= 4?; Safari >= 10, Firefox\n  // On older browsers (Chrome <= 4?, Safari 9), a per element patching\n  // strategy is used for patching accessors.\n  if (utils.settings.hasDescriptors) {\n    patchAccessors(window.Node.prototype);\n    patchAccessors(window.Text.prototype);\n    patchAccessors(window.DocumentFragment.prototype);\n    patchAccessors(window.Element.prototype);\n    let nativeHTMLElement =\n      (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n      HTMLElement;\n    patchAccessors(nativeHTMLElement.prototype);\n    patchAccessors(window.Document.prototype);\n    if (window.HTMLSlotElement) {\n      patchAccessors(window.HTMLSlotElement.prototype);\n    }\n  }\n}\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n/**\n * @param {ShadyCSSOptions | ShadyCSSInterface | undefined} settings\n */\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings['nativeCss'] && !settings['shimcssproperties'];\n  nativeShadow = nativeShadow && !settings['nativeShadow'] && !settings['shimshadow'];\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window['WebComponents']) {\n  parseSettings(window['WebComponents']['flags']);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types, StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport * as RX from './common-regex'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map'\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  template['_applyShimInvalid'] = true;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return !template['_applyShimInvalid'];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return template._validating;\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      template['_applyShimInvalid'] = false;\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  if (whenReady) {\n    whenReady(callback)\n  } else {\n    if (!readyPromise) {\n      readyPromise = new Promise((resolve) => {resolveFn = resolve});\n      if (document.readyState === 'complete') {\n        resolveFn();\n      } else {\n        document.addEventListener('readystatechange', () => {\n          if (document.readyState === 'complete') {\n            resolveFn();\n          }\n        });\n      }\n    }\n    readyPromise.then(function(){ callback && callback(); });\n  }\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  // defaultPrevented is broken in IE.\n  // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n  var workingDefaultPrevented = (function() {\n    var e = document.createEvent('Event');\n    e.initEvent('foo', true, true);\n    e.preventDefault();\n    return e.defaultPrevented;\n  })();\n\n  if (!workingDefaultPrevented) {\n    var origPreventDefault = Event.prototype.preventDefault;\n    Event.prototype.preventDefault = function() {\n      if (!this.cancelable) {\n        return;\n      }\n\n      origPreventDefault.call(this);\n\n      Object.defineProperty(this, 'defaultPrevented', {\n        get: function() {\n          return true;\n        },\n        configurable: true\n      });\n    };\n  }\n\n  var isIE = /Trident/.test(navigator.userAgent);\n\n  // CustomEvent constructor shim\n  if (!window.CustomEvent || isIE && (typeof window.CustomEvent !== 'function')) {\n    window.CustomEvent = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('CustomEvent');\n      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n      return e;\n    };\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  // Event constructor shim\n  if (!window.Event || isIE && (typeof window.Event !== 'function')) {\n    var origEvent = window.Event;\n    window.Event = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('Event');\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n      return e;\n    };\n    if (origEvent) {\n      for (var i in origEvent) {\n        window.Event[i] = origEvent[i];\n      }\n    }\n    window.Event.prototype = origEvent.prototype;\n  }\n\n  if (!window.MouseEvent || isIE && (typeof window.MouseEvent !== 'function')) {\n    var origMouseEvent = window.MouseEvent;\n    window.MouseEvent = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent('MouseEvent');\n      e.initMouseEvent(inType,\n        Boolean(params.bubbles), Boolean(params.cancelable),\n        params.view || window, params.detail,\n        params.screenX, params.screenY, params.clientX, params.clientY,\n        params.ctrlKey, params.altKey, params.shiftKey, params.metaKey,\n        params.button, params.relatedTarget);\n      return e;\n    };\n    if (origMouseEvent) {\n      for (var i in origMouseEvent) {\n        window.MouseEvent[i] = origMouseEvent[i];\n      }\n    }\n    window.MouseEvent.prototype = origMouseEvent.prototype;\n  }\n\n  // ES6 stuff\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  if (!Object.assign) {\n    var assign = function(target, source) {\n      var n$ = Object.getOwnPropertyNames(source);\n      for (var i=0, p; i < n$.length; i++) {\n        p = n$[i];\n        target[p] = source[p];\n      }\n    }\n\n    Object.assign = function(target, sources) {\n      var args = [].slice.call(arguments, 1);\n      for (var i=0, s; i < args.length; i++) {\n        s = args[i];\n        if (s) {\n          assign(target, s);\n        }\n      }\n      return target;\n    }\n  }\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n// minimal template polyfill\n(function() {\n\n  var needsTemplate = (typeof HTMLTemplateElement === 'undefined');\n\n  // NOTE: Patch document.importNode to work around IE11 bug that\n  // casues children of a document fragment imported while\n  // there is a mutation observer to not have a parentNode (!?!)\n  // It's important that this is the first patch to `importNode` so that\n  // dom produced for later patches is correct.\n  if (/Trident/.test(navigator.userAgent)) {\n    (function() {\n      var Native_importNode = Document.prototype.importNode;\n      Document.prototype.importNode = function() {\n        var n = Native_importNode.apply(this, arguments);\n        // Copy all children to a new document fragment since\n        // this one may be broken\n        if (n.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          var f = this.createDocumentFragment();\n          f.appendChild(n);\n          return f;\n        } else {\n          return n;\n        }\n      };\n    })();\n  }\n\n  // NOTE: we rely on this cloneNode not causing element upgrade.\n  // This means this polyfill must load before the CE polyfill and\n  // this would need to be re-worked if a browser supports native CE\n  // but not <template>.\n  var Native_cloneNode = Node.prototype.cloneNode;\n  var Native_createElement = Document.prototype.createElement;\n  var Native_importNode = Document.prototype.importNode;\n\n  // returns true if nested templates cannot be cloned (they cannot be on\n  // some impl's like Safari 8 and Edge)\n  // OR if cloning a document fragment does not result in a document fragment\n  var needsCloning = (function() {\n    if (!needsTemplate) {\n      var t = document.createElement('template');\n      var t2 = document.createElement('template');\n      t2.content.appendChild(document.createElement('div'));\n      t.content.appendChild(t2);\n      var clone = t.cloneNode(true);\n      return (clone.content.childNodes.length === 0 || clone.content.firstChild.content.childNodes.length === 0\n        || !(document.createDocumentFragment().cloneNode() instanceof DocumentFragment));\n    }\n  })();\n\n  var TEMPLATE_TAG = 'template';\n  var PolyfilledHTMLTemplateElement = function() {};\n\n  if (needsTemplate) {\n\n    var contentDoc = document.implementation.createHTMLDocument('template');\n    var canDecorate = true;\n\n    var templateStyle = document.createElement('style');\n    templateStyle.textContent = TEMPLATE_TAG + '{display:none;}';\n\n    var head = document.head;\n    head.insertBefore(templateStyle, head.firstElementChild);\n\n    /**\n      Provides a minimal shim for the <template> element.\n    */\n    PolyfilledHTMLTemplateElement.prototype = Object.create(HTMLElement.prototype);\n\n\n    // if elements do not have `innerHTML` on instances, then\n    // templates can be patched by swizzling their prototypes.\n    var canProtoPatch =\n      !(document.createElement('div').hasOwnProperty('innerHTML'));\n\n    /**\n      The `decorate` method moves element children to the template's `content`.\n      NOTE: there is no support for dynamically adding elements to templates.\n    */\n    PolyfilledHTMLTemplateElement.decorate = function(template) {\n      // if the template is decorated, return fast\n      if (template.content) {\n        return;\n      }\n      template.content = contentDoc.createDocumentFragment();\n      var child;\n      while (child = template.firstChild) {\n        template.content.appendChild(child);\n      }\n      // NOTE: prefer prototype patching for performance and\n      // because on some browsers (IE11), re-defining `innerHTML`\n      // can result in intermittent errors.\n      if (canProtoPatch) {\n        template.__proto__ = PolyfilledHTMLTemplateElement.prototype;\n      } else {\n        template.cloneNode = function(deep) {\n          return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n        };\n        // add innerHTML to template, if possible\n        // Note: this throws on Safari 7\n        if (canDecorate) {\n          try {\n            defineInnerHTML(template);\n          } catch (err) {\n            canDecorate = false;\n          }\n        }\n      }\n      // bootstrap recursively\n      PolyfilledHTMLTemplateElement.bootstrap(template.content);\n    };\n\n    function defineInnerHTML(obj) {\n      Object.defineProperty(obj, 'innerHTML', {\n        get: function() {\n          var o = '';\n          for (var e = this.content.firstChild; e; e = e.nextSibling) {\n            o += e.outerHTML || escapeData(e.data);\n          }\n          return o;\n        },\n        set: function(text) {\n          contentDoc.body.innerHTML = text;\n          PolyfilledHTMLTemplateElement.bootstrap(contentDoc);\n          while (this.content.firstChild) {\n            this.content.removeChild(this.content.firstChild);\n          }\n          while (contentDoc.body.firstChild) {\n            this.content.appendChild(contentDoc.body.firstChild);\n          }\n        },\n        configurable: true\n      });\n    }\n\n    defineInnerHTML(PolyfilledHTMLTemplateElement.prototype);\n\n    /**\n      The `bootstrap` method is called automatically and \"fixes\" all\n      <template> elements in the document referenced by the `doc` argument.\n    */\n    PolyfilledHTMLTemplateElement.bootstrap = function(doc) {\n      var templates = doc.querySelectorAll(TEMPLATE_TAG);\n      for (var i=0, l=templates.length, t; (i<l) && (t=templates[i]); i++) {\n        PolyfilledHTMLTemplateElement.decorate(t);\n      }\n    };\n\n    // auto-bootstrapping for main document\n    document.addEventListener('DOMContentLoaded', function() {\n      PolyfilledHTMLTemplateElement.bootstrap(document);\n    });\n\n    // Patch document.createElement to ensure newly created templates have content\n    Document.prototype.createElement = function() {\n      'use strict';\n      var el = Native_createElement.apply(this, arguments);\n      if (el.localName === 'template') {\n        PolyfilledHTMLTemplateElement.decorate(el);\n      }\n      return el;\n    };\n\n    var escapeDataRegExp = /[&\\u00A0<>]/g;\n\n    function escapeReplace(c) {\n      switch (c) {\n        case '&':\n          return '&amp;';\n        case '<':\n          return '&lt;';\n        case '>':\n          return '&gt;';\n        case '\\u00A0':\n          return '&nbsp;';\n      }\n    }\n\n    function escapeData(s) {\n      return s.replace(escapeDataRegExp, escapeReplace);\n    }\n  }\n\n  // make cloning/importing work!\n  if (needsTemplate || needsCloning) {\n\n    PolyfilledHTMLTemplateElement._cloneNode = function(template, deep) {\n      var clone = Native_cloneNode.call(template, false);\n      // NOTE: decorate doesn't auto-fix children because they are already\n      // decorated so they need special clone fixup.\n      if (this.decorate) {\n        this.decorate(clone);\n      }\n      if (deep) {\n        // NOTE: use native clone node to make sure CE's wrapped\n        // cloneNode does not cause elements to upgrade.\n        clone.content.appendChild(\n            Native_cloneNode.call(template.content, true));\n        // now ensure nested templates are cloned correctly.\n        this.fixClonedDom(clone.content, template.content);\n      }\n      return clone;\n    };\n\n    PolyfilledHTMLTemplateElement.prototype.cloneNode = function(deep) {\n      return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n    }\n\n    // Given a source and cloned subtree, find <template>'s in the cloned\n    // subtree and replace them with cloned <template>'s from source.\n    // We must do this because only the source templates have proper .content.\n    PolyfilledHTMLTemplateElement.fixClonedDom = function(clone, source) {\n      // do nothing if cloned node is not an element\n      if (!source.querySelectorAll) return;\n      // these two lists should be coincident\n      var s$ = source.querySelectorAll(TEMPLATE_TAG);\n      var t$ = clone.querySelectorAll(TEMPLATE_TAG);\n      for (var i=0, l=t$.length, t, s; i<l; i++) {\n        s = s$[i];\n        t = t$[i];\n        if (this.decorate) {\n          this.decorate(s);\n        }\n        t.parentNode.replaceChild(s.cloneNode(true), t);\n      }\n    };\n\n    // override all cloning to fix the cloned subtree to contain properly\n    // cloned templates.\n    Node.prototype.cloneNode = function(deep) {\n      var dom;\n      // workaround for Edge bug cloning documentFragments\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8619646/\n      if (this instanceof DocumentFragment) {\n        if (!deep) {\n          return this.ownerDocument.createDocumentFragment();\n        } else {\n          dom = this.ownerDocument.importNode(this, true);\n        }\n      } else {\n        dom = Native_cloneNode.call(this, deep);\n      }\n      // template.content is cloned iff `deep`.\n      if (deep) {\n        PolyfilledHTMLTemplateElement.fixClonedDom(dom, this);\n      }\n      return dom;\n    };\n\n    // NOTE: we are cloning instead of importing <template>'s.\n    // However, the ownerDocument of the cloned template will be correct!\n    // This is because the native import node creates the right document owned\n    // subtree and `fixClonedDom` inserts cloned templates into this subtree,\n    // thus updating the owner doc.\n    Document.prototype.importNode = function(element, deep) {\n      if (element.localName === TEMPLATE_TAG) {\n        return PolyfilledHTMLTemplateElement._cloneNode(element, deep);\n      } else {\n        var dom = Native_importNode.call(this, element, deep);\n        if (deep) {\n          PolyfilledHTMLTemplateElement.fixClonedDom(dom, element);\n        }\n        return dom;\n      }\n    };\n\n    if (needsCloning) {\n      window.HTMLTemplateElement.prototype.cloneNode = function(deep) {\n        return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n      };\n    }\n  }\n\n  if (needsTemplate) {\n    window.HTMLTemplateElement = PolyfilledHTMLTemplateElement;\n  }\n\n})();\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.ES6Promise=e()}(this,function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){I=t}function r(t){J=t}function o(){return function(){return process.nextTick(a)}}function i(){return\"undefined\"!=typeof H?function(){H(a)}:c()}function s(){var t=0,e=new V(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){return t.port2.postMessage(0)}}function c(){var t=setTimeout;return function(){return t(a,1)}}function a(){for(var t=0;t<G;t+=2){var e=$[t],n=$[t+1];e(n),$[t]=void 0,$[t+1]=void 0}G=0}function f(){try{var t=require,e=t(\"vertx\");return H=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=arguments,r=this,o=new this.constructor(p);void 0===o[et]&&k(o);var i=r._state;return i?!function(){var t=n[i-1];J(function(){return x(i,o,t,r._result)})}():E(r,o,t,e),o}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function v(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function _(t){try{return t.then}catch(e){return it.error=e,it}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){J(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===rt?S(t,e._result):e._state===ot?j(t,e._result):E(e,void 0,function(e){return g(t,e)},function(e){return j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===l&&n.constructor.resolve===h?b(t,n):r===it?(j(t,it.error),it.error=null):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,v()):t(n)?w(e,n,_(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===nt&&(t._result=e,t._state=rt,0!==t._subscribers.length&&J(T,t))}function j(t,e){t._state===nt&&(t._state=ot,t._result=e,J(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+rt]=n,o[i+ot]=r,0===i&&t._state&&J(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,o=void 0,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return st.error=n,st}}function x(t,n,r,o){var i=e(r),s=void 0,u=void 0,c=void 0,a=void 0;if(i){if(s=P(r,o),s===st?(a=!0,u=s.error,s.error=null):c=!0,n===s)return void j(n,d())}else s=o,c=!0;n._state!==nt||(i&&c?g(n,s):a?j(n,u):t===rt?S(n,s):t===ot&&j(n,s))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return ut++}function k(t){t[et]=ut++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[et]||k(this.promise),B(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,q())}function q(){return new Error(\"Array Methods must be provided an Array\")}function F(t){return new Y(this,t).promise}function D(t){var e=this;return new e(B(t)?function(n,r){for(var o=t.length,i=0;i<o;i++)e.resolve(t[i]).then(n,r)}:function(t,e){return e(new TypeError(\"You must pass an array to race.\"))})}function K(t){var e=this,n=new e(p);return j(n,t),n}function L(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function N(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function U(t){this[et]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&L(),this instanceof U?C(this,t):N())}function W(){var t=void 0;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;if(n){var r=null;try{r=Object.prototype.toString.call(n.resolve())}catch(e){}if(\"[object Promise]\"===r&&!n.cast)return}t.Promise=U}var z=void 0;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B=z,G=0,H=void 0,I=void 0,J=function(t,e){$[G]=t,$[G+1]=e,G+=2,2===G&&(I?I(a):tt())},Q=\"undefined\"!=typeof window?window:void 0,R=Q||{},V=R.MutationObserver||R.WebKitMutationObserver,X=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),Z=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,$=new Array(1e3),tt=void 0;tt=X?o():V?s():Z?u():void 0===Q&&\"function\"==typeof require?f():c();var et=Math.random().toString(36).substring(16),nt=void 0,rt=1,ot=2,it=new M,st=new M,ut=0;return Y.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===nt&&n<t;n++)this._eachEntry(e[n],n)},Y.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===h){var o=_(t);if(o===l&&t._state!==nt)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===U){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){return e(t)}),e)}else this._willSettleAt(r(t),e)},Y.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===nt&&(this._remaining--,t===ot?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},Y.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){return n._settledAt(rt,e,t)},function(t){return n._settledAt(ot,e,t)})},U.all=F,U.race=D,U.resolve=h,U.reject=K,U._setScheduler=n,U._setAsap=r,U._asap=J,U.prototype={constructor:U,then:l,\"catch\":function(t){return this.then(null,t)}},U.polyfill=W,U.Promise=U,U.polyfill(),U});","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n\n  'use strict';\n\n  // Establish scope.\n  window['WebComponents'] = window['WebComponents'] || {'flags':{}};\n\n  // loading script\n  var file = 'webcomponents-lite.js';\n  var script = document.querySelector('script[src*=\"' + file + '\"]');\n  var flagMatcher = /wc-(.+)/;\n\n  // Flags. Convert url arguments to flags\n  var flags = {};\n  if (!flags['noOpts']) {\n    // from url\n    location.search.slice(1).split('&').forEach(function(option) {\n      var parts = option.split('=');\n      var match;\n      if (parts[0] && (match = parts[0].match(flagMatcher))) {\n        flags[match[1]] = parts[1] || true;\n      }\n    });\n    // from script\n    if (script) {\n      for (var i=0, a; (a=script.attributes[i]); i++) {\n        if (a.name !== 'src') {\n          flags[a.name] = a.value || true;\n        }\n      }\n    }\n    // log flags\n    if (flags['log'] && flags['log']['split']) {\n      var parts = flags['log'].split(',');\n      flags['log'] = {};\n      parts.forEach(function(f) {\n        flags['log'][f] = true;\n      });\n    } else {\n      flags['log'] = {};\n    }\n  }\n\n  // exports\n  window['WebComponents']['flags'] = flags;\n  var forceShady = flags['shadydom'];\n  if (forceShady) {\n    window['ShadyDOM'] = window['ShadyDOM'] || {};\n    window['ShadyDOM']['force'] = forceShady;\n  }\n\n  var forceCE = flags['register'] || flags['ce'];\n  if (forceCE && window['customElements']) {\n    window['customElements']['forcePolyfill'] = forceCE;\n  }\n\n})();\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let appendChild = Element.prototype.appendChild;\nexport let insertBefore = Element.prototype.insertBefore;\nexport let removeChild = Element.prototype.removeChild;\nexport let setAttribute = Element.prototype.setAttribute;\nexport let removeAttribute = Element.prototype.removeAttribute;\nexport let cloneNode = Element.prototype.cloneNode;\nexport let importNode = Document.prototype.importNode;\nexport let addEventListener = Element.prototype.addEventListener;\nexport let removeEventListener = Element.prototype.removeEventListener;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeChild} from './native-methods'\nimport {parentNode} from './native-tree'\n\n// NOTE: normalize event contruction where necessary (IE11)\nlet NormalizedEvent = typeof Event === 'function' ? Event :\n  function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    return e;\n  };\n\nexport default class {\n\n  constructor(root) {\n    this.root = root;\n    this.insertionPointTag = 'slot';\n  }\n\n  getInsertionPoints() {\n    return this.root.querySelectorAll(this.insertionPointTag);\n  }\n\n  isInsertionPoint(node) {\n    return node.localName && node.localName == this.insertionPointTag;\n  }\n\n  distribute() {\n    if (this.root.hasInsertionPoint()) {\n      return this.distributePool(this.root, this.collectPool());\n    }\n    return [];\n  }\n\n  // Gather the pool of nodes that should be distributed. We will combine\n  // these with the \"content root\" to arrive at the composed tree.\n  collectPool() {\n    let host = this.root.host;\n    let pool=[], i=0;\n    for (let n=host.firstChild; n; n=n.nextSibling) {\n      pool[i++] = n;\n    }\n    return pool;\n  }\n\n  // perform \"logical\" distribution; note, no actual dom is moved here,\n  // instead elements are distributed into storage\n  // array where applicable.\n  distributePool(node, pool) {\n    let dirtyRoots = [];\n    let p$ = this.root._getInsertionPoints();\n    for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n      this.distributeInsertionPoint(p, pool);\n      // provoke redistribution on insertion point parents\n      // must do this on all candidate hosts since distribution in this\n      // scope invalidates their distribution.\n      // only get logical parent.\n      let parent = p.parentNode;\n      let root = parent && parent.__shady && parent.__shady.root\n      if (root && root.hasInsertionPoint()) {\n        dirtyRoots.push(root);\n      }\n    }\n    for (let i=0; i < pool.length; i++) {\n      let p = pool[i];\n      if (p) {\n        p.__shady = p.__shady || {};\n        p.__shady.assignedSlot = undefined;\n        // remove undistributed elements from physical dom.\n        let parent = parentNode(p);\n        if (parent) {\n          removeChild.call(parent, p);\n        }\n      }\n    }\n    return dirtyRoots;\n  }\n\n  distributeInsertionPoint(insertionPoint, pool) {\n    let prevAssignedNodes = insertionPoint.__shady.assignedNodes;\n    if (prevAssignedNodes) {\n      this.clearAssignedSlots(insertionPoint, true);\n    }\n    insertionPoint.__shady.assignedNodes = [];\n    let needsSlotChange = false;\n    // distribute nodes from the pool that this selector matches\n    let anyDistributed = false;\n    for (let i=0, l=pool.length, node; i < l; i++) {\n      node=pool[i];\n      // skip nodes that were already used\n      if (!node) {\n        continue;\n      }\n      // distribute this node if it matches\n      if (this.matchesInsertionPoint(node, insertionPoint)) {\n        if (node.__shady._prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint)\n        // remove this node from the pool\n        pool[i] = undefined;\n        // since at least one node matched, we won't need fallback content\n        anyDistributed = true;\n      }\n    }\n    // Fallback content if nothing was distributed here\n    if (!anyDistributed) {\n      let children = insertionPoint.childNodes;\n      for (let j = 0, node; j < children.length; j++) {\n        node = children[j];\n        if (node.__shady._prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint);\n      }\n    }\n    // we're already dirty if a node was newly added to the slot\n    // and we're also dirty if the assigned count decreased.\n    if (prevAssignedNodes) {\n      // TODO(sorvell): the tracking of previously assigned slots\n      // could instead by done with a Set and then we could\n      // avoid needing to iterate here to clear the info.\n      for (let i=0; i < prevAssignedNodes.length; i++) {\n        prevAssignedNodes[i].__shady._prevAssignedSlot = null;\n      }\n      if (insertionPoint.__shady.assignedNodes.length < prevAssignedNodes.length) {\n        needsSlotChange = true;\n      }\n    }\n    this.setDistributedNodesOnInsertionPoint(insertionPoint);\n    if (needsSlotChange) {\n      this._fireSlotChange(insertionPoint);\n    }\n  }\n\n  clearAssignedSlots(slot, savePrevious) {\n    let n$ = slot.__shady.assignedNodes;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = n$[i];\n        if (savePrevious) {\n          n.__shady._prevAssignedSlot = n.__shady.assignedSlot;\n        }\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n.__shady.assignedSlot === slot) {\n          n.__shady.assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  matchesInsertionPoint(node, insertionPoint) {\n    let slotName = insertionPoint.getAttribute('name');\n    slotName = slotName ? slotName.trim() : '';\n    let slot = node.getAttribute && node.getAttribute('slot');\n    slot = slot ? slot.trim() : '';\n    return (slot == slotName);\n  }\n\n  distributeNodeInto(child, insertionPoint) {\n    insertionPoint.__shady.assignedNodes.push(child);\n    child.__shady.assignedSlot = insertionPoint;\n  }\n\n  setDistributedNodesOnInsertionPoint(insertionPoint) {\n    let n$ = insertionPoint.__shady.assignedNodes;\n    insertionPoint.__shady.distributedNodes = [];\n    for (let i=0, n; (i<n$.length) && (n=n$[i]) ; i++) {\n      if (this.isInsertionPoint(n)) {\n        let d$ = n.__shady.distributedNodes;\n        if (d$) {\n          for (let j=0; j < d$.length; j++) {\n            insertionPoint.__shady.distributedNodes.push(d$[j]);\n          }\n        }\n      } else {\n        insertionPoint.__shady.distributedNodes.push(n$[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(insertionPoint) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    insertionPoint.dispatchEvent(new NormalizedEvent('slotchange'));\n    if (insertionPoint.__shady.assignedSlot) {\n      this._fireSlotChange(insertionPoint.__shady.assignedSlot);\n    }\n  }\n\n  isFinalDestination(insertionPoint) {\n    return !(insertionPoint.__shady.assignedSlot);\n  }\n\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport * as utils from './utils'\nimport {flush, enqueue} from './flush'\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes'\nimport * as nativeMethods from './native-methods'\nimport * as nativeTree from './native-tree'\nimport {patchBuiltins} from './patch-builtins'\nimport {patchEvents} from './patch-events'\nimport {ShadyRoot} from './attach-shadow'\n\nif (utils.settings.inUse) {\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // TODO(sorvell): remove when Polymer does not depend on this\n    'patch': (node) => node,\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Apply patches to events...\n  patchEvents();\n  // Apply patches to builtins (e.g. Element.prototype) where applicable.\n  patchBuiltins();\n\n  window.ShadowRoot = ShadyRoot;\n}","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media[^(]*(\\([^)]*\\))/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport {getIsExtends} from './style-util'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof window['SVGElement'] && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = /** @type {ShadowRoot} */(root).host;\n            if (host) {\n              let {is: scope} = getIsExtends(host);\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = /** @type {HTMLElement} */(mxn.removedNodes[i]);\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window['customElements']['flush']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait'\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    let cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      let customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      let style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        let appliedStyle = /** @type {HTMLStyleElement} */(style['__appliedElement']);\n        if (appliedStyle) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            appliedStyle.setAttribute(attr.name, attr.value);\n          }\n        }\n        let styleToTransform = appliedStyle || style;\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport let CustomStyleInterfaceInterface;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse'\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\nimport {flush as watcherFlush} from './document-watcher'\nimport templateMap from './template-map'\nimport * as ApplyShimUtils from './apply-shim-utils'\nimport documentWait from './document-wait'\nimport {updateNativeProperties} from './common-utils'\nimport {CustomStyleInterfaceInterface} from './custom-style-interface' //eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = this._applyShim['detectMixin'](cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    } else {\n      this._applyShim = {\n        /* eslint-disable no-unused-vars */\n        ['detectMixin'](str){return false},\n        ['transformRule'](ast){},\n        ['transformRules'](ast, name){},\n        /* eslint-enable no-unused-vars */\n      }\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    } else {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */({\n        ['processStyles']() {},\n        ['enqueued']: false,\n        ['getStyleForCustomStyle'](s) { return null } // eslint-disable-line no-unused-vars\n      })\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim'\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings'\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})();\n"],"names":["isShadyRoot","obj","Boolean","__localName","ownerShadyRootForNode","node","root","getRootNode","matchesSelector","element","selector","matches","call","copyOwnProperty","name","source","target","pd","Object","getOwnPropertyDescriptor","defineProperty","extend","n","n$","getOwnPropertyNames","i","length","extendAll","sources","mixin","patchPrototype","proto","getPrototypeOf","hasOwnProperty","patchProto","create","__sourceProto","__proto__","microtask","callback","push","textContent","content","enqueue","scheduled","flush","didFlush","flushList","shift","filterMutations","mutations","targetRootNode","map","mutation","mutationInScope","addedNodes","nodes","Array","from","filter","m","escapeReplace","c","escapeAttr","s","replace","escapeAttrRegExp","escapeData","escapeDataRegExp","makeSet","arr","set","getOuterHTML","parentNode","nodeType","Node","ELEMENT_NODE","attr","tagName","localName","attrs","attributes","value","voidElements","getInnerHTML","TEXT_NODE","data","plaintextParents","COMMENT_NODE","console","error","Error","child","c$","childNodes","l","currentNode","nodeWalker","firstChild","lastChild","previousSibling","nextSibling","parentElement","elementWalker","firstElementChild","lastElementChild","previousElementSibling","nextElementSibling","children","innerHTML","nodeValue","textWalker","document","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","clearNode","removeChild","getDocumentActiveElement","nativeActiveElementDescriptor","get","utils","hasDescriptors","activeElement","activeElementForNode","active","host","contains","activeRoot","patchAccessorGroup","descriptors","force","p","objDesc","configurable","warn","patchAccessors","OutsideAccessors","InsideAccessors","ActiveElementAccessor","recordInsertBefore","container","ref_node","__shady","undefined","DOCUMENT_FRAGMENT_NODE","resetTo","linkNode","ps","ns","recordRemoveChild","addNode","ownerRoot","ipAdded","_changePending","_skipUpdateInsertionPoints","_maybeAddInsertionPoint","_maybeDistribute","_renderPending","removeNode","logicalParent","distributed","maybeDistributeParent","removedDistributed","_removeDistributedChildren","addedInsertionPoint","getInsertionPointTag","_scheduleObserver","addedNode","removedNode","observer","removedNodes","schedule","removeNodeFromParent","_hasCachedOwnerRoot","ownerShadyRoot","options","parent","documentElement","insertionPointTag","fragContent","querySelector","wrappedContent","hasContent","needsDist","_nodeNeedsDistribution","added","np","na","querySelectorAll","hasInsertionPoint","hostNeedsDist","ip$","_getInsertionPoints","insertionPoint","_contains","dc$","assignedNodes","flatten","j","_removeOwnerShadyRoot","firstComposedNode","isFinalDestination","updateRootViaContentChange","update","distributeAttributeChange","query","matcher","halter","list","_queryElements","elements","_queryElement","result","renderRootNode","render","setAttribute","scopingShim","window","removeAttribute","insertBefore","cloneNode","deep","nativeMethods","nc","appendChild","importNode","ownerDocument","pathComposer","startNode","composed","composedPath","current","startRoot","assignedSlot","retarget","refNode","path","ancestor","lastRoot","rootIdx","refNodePath","p$","indexOf","mixinComposedFlag","Base","klazz","type","event","__composed","prototype","fireHandlers","phase","hs","__handlers","fn","__immediatePropagationStopped","retargetNonBubblingEvent","e","__propagationStopped","Event","AT_TARGET","lastFiredRoot","shadowRoot","listenerSettingsEqual","savedListener","capture","once","passive","savedNode","savedType","savedCapture","savedOnce","savedPassive","addEventListener","optionsOrCapture","__eventWrappers","this","wrapperFn","removeEventListener","eventPhase","BUBBLING_PHASE","relatedTarget","stopImmediatePropagation","nonBubblingEventsToRetarget","bubble","splice","idx","activateFocusEventOverrides","ev","patchEvent","__relatedTarget","eventMixin","newSplice","index","removed","addedCount","calcEditDistances","currentStart","currentEnd","old","oldStart","oldEnd","rowCount","columnCount","distances","equals","north","west","spliceOperationsFromEditDistances","edits","northWest","min","EDIT_LEAVE","EDIT_UPDATE","EDIT_DELETE","EDIT_ADD","reverse","calcSplices","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","ops","splices","oldIndex","searchLength","index1","index2","count","currentValue","previousValue","calculateSplices","previous","attachShadow","ShadyRoot","ShadyRootConstructionToken","getAssignedSlot","patchBuiltin","d","isValidCustomElementName","reserved","reservedTagList","has","validForm","test","isConnected","nativeValue","__CE_isImportDocument","Document","ShadowRoot","nextSiblingOrAncestorSibling","start","walkDeepDescendantElements","visitedImports","Set","getAttribute","import","add","__CE_shadowRoot","setPropertyUnchecked","destination","parse","text","clean","parseCss","lex","cssText","RX","comments","port","StyleNode","OPEN_BRACE","CLOSE_BRACE","t","substring","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","rules","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","nativeShadow","toCssText","rulesForStyle","style","isKeyframesSelector","rule","forEachRule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","MEDIA_MATCH","applyCss","moniker","contextNode","createScopeStyle","createElement","applyStylePlaceHolder","placeHolder","createComment","after","lastHeadApplyNode","scope","head","applyStyle","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","setElementClassRaw","getIsExtends","is","typeExtension","extends","addToBitMask","bits","o","parseInt","v","invalidate","elementName","template","templateMap","invalidateTemplate","templateIsValid","templateIsValidating","_validating","startValidatingTemplate","then","documentWait","whenReady","readyPromise","Promise","resolve","readyState","updateNativeProperties","properties","removeProperty","setProperty","createEvent","initEvent","preventDefault","defaultPrevented","origPreventDefault","cancelable","isIE","navigator","userAgent","CustomEvent","inType","params","initCustomEvent","bubbles","detail","origEvent","MouseEvent","origMouseEvent","initMouseEvent","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","object","slice","assign","args","WebComponents","needsTemplate","HTMLTemplateElement","Native_importNode","apply","f","createDocumentFragment","Native_cloneNode","Native_createElement","needsCloning","t2","clone","DocumentFragment","PolyfilledHTMLTemplateElement","defineInnerHTML","outerHTML","body","bootstrap","contentDoc","implementation","createHTMLDocument","canDecorate","templateStyle","TEMPLATE_TAG","HTMLElement","canProtoPatch","decorate","_cloneNode","err","doc","templates","el","fixClonedDom","s$","t$","replaceChild","dom","exports","module","define","amd","ES6Promise","H","a","setTimeout","G","$","constructor","et","k","_state","J","x","_result","E","h","g","TypeError","_","it","y","S","_label","b","rt","ot","w","A","_onerror","T","nt","_subscribers","M","P","st","u","C","O","ut","Y","_instanceConstructor","promise","B","_input","_remaining","_enumerate","q","F","D","K","L","N","U","W","global","self","Function","toString","cast","z","isArray","I","tt","Q","R","V","MutationObserver","WebKitMutationObserver","X","process","Z","Uint8ClampedArray","importScripts","MessageChannel","nextTick","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","require","runOnLoop","runOnContext","random","_eachEntry","_settledAt","_willSettleAt","all","race","reject","_setScheduler","_setAsap","_asap","catch","polyfill","flags","script","search","forEach","option","parts","forceShady","forceCE","hasNativeShadowDOM","Element","desc","inUse","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","twiddle","queue","AsyncObserver","_scheduled","callbacks","takeRecords","cb","observeChildren","unobserveChildren","handle","_observer","delete","_callback","size","_node","SHOW_ALL","SHOW_ELEMENT","nativeInnerHTMLDesc","inertDoc","htmlContainer","nativeTree","tc","cn","join","ShadowRootAccessor","patchOutsideElementAccessors","__outsideAccessors","patchInsideElementAccessors","__insideAccessors","recordChildNodes","alwaysComposed","isTrusted","__composedPath","currentTarget","__relatedTargetComposedPath","stopPropagation","PatchedEvent","PatchedCustomEvent","PatchedMouseEvent","NormalizedEvent","distributePool","collectPool","pool","dirtyRoots","distributeInsertionPoint","prevAssignedNodes","clearAssignedSlots","needsSlotChange","anyDistributed","matchesInsertionPoint","_prevAssignedSlot","distributeNodeInto","setDistributedNodesOnInsertionPoint","_fireSlotChange","slot","savePrevious","slotName","distributedNodes","isInsertionPoint","d$","dispatchEvent","token","_init","_hasRendered","_distributor","Distributor","_this","_getRenderRoot","renderRoot","_rendererForHost","__insertionPoints","updateInsertionPoints","distribute","compose","forceRender","i$","_insertionPoints","getInsertionPoints","_composeTree","_updateChildNodes","_composeNode","distributedNode","next","nodeMixin","ownerDocumentElement","textMixin","fragmentMixin","slotMixin","elementMixin","defineProperties","documentMixin","ShadyDOM","Text","HTMLSlotElement","CustomElementState","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","definition","listener","patch","__CE_patched","__CE_state","CEState","custom","connectedCallback","upgradeElement","disconnectedCallback","__CE_hasRegistry","__CE_documentLoadHandled","patchAndUpgradeTree","localNameToDefinition","constructionStack","failed","__CE_definition","attributeChangedCallback","observedAttributes","Utilities","oldValue","newValue","namespace","DocumentConstructionObserver","internals","_internals","_document","_handleMutations","bind","disconnect","Deferred","_value","_resolve","_promise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_unflushedLocalNames","_documentConstructionObserver","SyntaxError","adoptedCallback","getCallback","callbackValue","setDefinition","_flush","deferred","prior","toPromise","outer","whenDefined","polyfillWrapFlushCallback","createElementNS","getAttributeNS","setAttributeNS","removeAttributeNS","AlreadyConstructedMarker","builtIn","connectedBefore","prepend","disconnectTree","connectTree","append","before","wasConnected","replaceWith","remove","priorCustomElements","constructorToDefinition","Native","Document_createElement","setPrototypeOf","lastIndex","Document_importNode","patchTree","Document_createElementNS","Document_prepend","Document_append","patch_textContent","baseDescriptor","enumerable","assignedValue","childNodesLength","insertedNodes","nativeResult","Node_insertBefore","nodeWasConnected","Node_appendChild","Node_cloneNode","Node_removeChild","nodeToInsert","nodeToRemove","Node_replaceChild","nodeToInsertWasConnected","thisIsConnected","Node_textContent","addPatch","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","Element_attachShadow","init","Element_innerHTML","HTMLElement_innerHTML","rawDiv","Element_setAttribute","Element_getAttribute","Element_setAttributeNS","Element_getAttributeNS","Element_removeAttribute","Element_removeAttributeNS","HTMLElement_insertAdjacentElement","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","customElements","CSS","supports","ShadyCSS","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","StyleTransformer","shouldRemoveScope","_transformDom","_content","classList","CLASS","styleRules","cssBuildType","StyleUtil","css","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","COMPLEX_SELECTOR_SEP","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","StyleInfo","ast","placeholder","ownStylePropertyNames","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","IS_IE","StyleProperties","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","collectProperties","collectCssText","rx","any","exec","collectConsumingCssText","valueForProperty","property","valueForProperties","fallback","propertyValue","colon","pp","output","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","selectorToMatch","key","parsedSelector","isRoot","isHost","hostProps","rootProps","whenHostOrRootRule","_element","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","elementStyles","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","transformStyles","placeholderMap","ce","origDefine","wrappedDefine","clazz","StyleCache","typeMax","cache","cacheEntry","ownPropertyNames","pn","tagname","styleElement","entry","_validate","elementNeedsScoping","SCOPE_NAME","hasAttribute","handler","mxns","mxn","classes","classIdx","childList","subtree","delayedStart","resolveFn","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","cs","getStyleForCustomStyle","appliedStyle","styleToTransform","addCustomStyle","processStyles","needsEnqueue","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","_ensure","styles","_prepared","_getCssBuild","_gatherStyles","hasMixins","_cssBuild","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","ApplyShim","ApplyShimUtils","transformCustomStyleForDocument","_this2","flushCustomStyles","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_prepareHost","_isRootOwner","_applyStyleProperties","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","hostAndRootPropertiesForScope","propertyData","propertyDataFromStyles","propertiesMatchingHost","_mixinOverrideStyles","reify","overrides","styleSubtree","shadowChildren","_revalidateApplyShim","applyCustomStyle","documentRule","getComputedStyle","getPropertyValue","classString","scopeName","classAttr","k$","XSCOPE_NAME","prepareTemplate","getComputedStyleValue","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","elementExtends"],"mappings":"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"}